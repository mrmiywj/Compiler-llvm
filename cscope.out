cscope 15 $HOME/Compiler-llvm               0000271047
	@anotherl.l

2 
	~"d©a°ru˘.h
"

3 
	~"smÆlc.èb.h
"

5 
	~<°dio.h
>

6 
	~<°rög.h
>

9 
	glöecou¡
 = 1;

10 
Node
* 
¸óãNode
(*, *);

13 [0-9]+|0x[0-9A-
F
]+

14 
id
 [
_a
-
zA
-
Z
][_a-zA-
Z0
-9]*

16 %% /* 
	$yyÀx
 */

18 
	`¥ötf
("DOT\n");

19 
yylvÆ
.
node
 = 
	`¸óãNode
("DOT",
yyãxt
);

20  
DOT
;

25 
	`¥ötf
("NOTEQ\n");

26 
yylvÆ
.
node
 = 
	`¸óãNode
("NOTEQ",
yyãxt
);

27  
NOTEQ
;

31 
	`¥ötf
("EQU\n");

32 
yylvÆ
.
node
 = 
	`¸óãNode
("EQU",
yyãxt
);

33  
EQU
;

37 
	`¥ötf
("SHLEFTAN\n");

38 
yylvÆ
.
node
 = 
	`¸óãNode
("SHLEFTAN",
yyãxt
);

39  
SHLEFTAN
;

43 
	`¥ötf
("SHRIGHTAN\n");

44 
yylvÆ
.
node
 = 
	`¸óãNode
("SHRIGHTAN",
yyãxt
);

45  
SHRIGHTAN
;

49 
	`¥ötf
("SHLEFT\n");

50 
yylvÆ
.
node
 = 
	`¸óãNode
("SHLEFT",
yyãxt
);

51  
SHLEFT
;

55 
	`¥ötf
("SHRIGHT\n");

56 
yylvÆ
.
node
 = 
	`¸óãNode
("SHRIGHT",
yyãxt
);

57  
SHRIGHT
;

61 
	`¥ötf
("INCR\n");

62 
yylvÆ
.
node
 = 
	`¸óãNode
("INCR",
yyãxt
);

63  
INCR
;

67 
	`¥ötf
("DECR\n");

68 
yylvÆ
.
node
 = 
	`¸óãNode
("DECR",
yyãxt
);

69  
DECR
;

73 
	`¥ötf
("BANDAN\n");

74 
yylvÆ
.
node
 = 
	`¸óãNode
("BANDAN",
yyãxt
);

75  
BANDAN
;

79 
	`¥ötf
("BXORAN\n");

80 
yylvÆ
.
node
 = 
	`¸óãNode
("BXORAN",
yyãxt
);

81  
BXORAN
;

85 
	`¥ötf
("BORAN\n");

86 
yylvÆ
.
node
 = 
	`¸óãNode
("BORAN",
yyãxt
);

87  
BORAN
;

92 
	`¥ötf
("PLUSAN\n");

93 
yylvÆ
.
node
 = 
	`¸óãNode
("PLUSAN",
yyãxt
);

94  
PLUSAN
;

99 
	`¥ötf
("MINUSAN\n");

100 
yylvÆ
.
node
 = 
	`¸óãNode
("MINUSAN",
yyãxt
);

101  
MINUSAN
;

105 
	`¥ötf
("TIMESAN\n");

106 
yylvÆ
.
node
 = 
	`¸óãNode
("TIMESAN",
yyãxt
);

107  
TIMESAN
;

111 
	`¥ötf
("DIVAN\n");

112 
yylvÆ
.
node
 = 
	`¸óãNode
("DIVAN",
yyãxt
);

113  
DIVAN
;

117 
	`¥ötf
("LEQ\n");

118 
yylvÆ
.
node
 = 
	`¸óãNode
("LEQ",
yyãxt
);

119  
LEQ
;

123 
	`¥ötf
("GEQ\n");

124 
yylvÆ
.
node
 = 
	`¸óãNode
("GEQ",
yyãxt
);

125  
GEQ
;

129 
	`¥ötf
("LOGAND\n");

130 
yylvÆ
.
node
 = 
	`¸óãNode
("LOGAND",
yyãxt
);

131  
LOGAND
;

135 
	`¥ötf
("LOGOR\n");

136 
yylvÆ
.
node
 = 
	`¸óãNode
("LOGOR",
yyãxt
);

137  
LOGOR
;

141 
	`¥ötf
("LOGNOT\n");

142 
yylvÆ
.
node
 = 
	`¸óãNode
("LOGNOT",
yyãxt
);

143  
LOGNOT
;

147 
	`¥ötf
("PLUS\n");

148 
yylvÆ
.
node
 = 
	`¸óãNode
("PLUS",
yyãxt
);

149  
PLUS
;

153 
	`¥ötf
("MINUS\n");

154 
yylvÆ
.
node
 = 
	`¸óãNode
("MINUS",
yyãxt
);

155  
MINUS
;

159 
	`¥ötf
("TIMES\n");

160 
yylvÆ
.
node
 = 
	`¸óãNode
("TIMES",
yyãxt
);

161  
TIMES
;

165 
	`¥ötf
("DIV\n");

166 
yylvÆ
.
node
 = 
	`¸óãNode
("DIV",
yyãxt
);

167  
DIV
;

171 
	`¥ötf
("MOD\n");

172 
yylvÆ
.
node
 = 
	`¸óãNode
("MOD",
yyãxt
);

173  
MOD
;

177 
	`¥ötf
("BITAND\n");

178 
yylvÆ
.
node
 = 
	`¸óãNode
("BITAND",
yyãxt
);

179  
BITAND
;

183 
	`¥ötf
("BITXOR\n");

184 
yylvÆ
.
node
 = 
	`¸óãNode
("BITXOR",
yyãxt
);

185  
BITXOR
;

189 
	`¥ötf
("BITOR\n");

190 
yylvÆ
.
node
 = 
	`¸óãNode
("BITOR",
yyãxt
);

191  
BITOR
;

195 
	`¥ötf
("BITNOT\n");

196 
yylvÆ
.
node
 = 
	`¸óãNode
("BITNOT",
yyãxt
);

197  
BITNOT
;

201 
	`¥ötf
("LT\n");

202 
yylvÆ
.
node
 = 
	`¸óãNode
("LT",
yyãxt
);

203  
LT
;

207 
	`¥ötf
("GT\n");

208 
yylvÆ
.
node
 = 
	`¸óãNode
("GT",
yyãxt
);

209  
GT
;

213 
	`¥ötf
("SEMI\n");

214 
yylvÆ
.
node
 = 
	`¸óãNode
("SEMI",
yyãxt
);

215  
SEMI
;

219 
	`¥ötf
("COMMA\n");

220 
yylvÆ
.
node
 = 
	`¸óãNode
("COMMA",
yyãxt
);

221  
COMMA
;

225 
	`¥ötf
("ASSIGNOP\n");

226 
yylvÆ
.
node
 = 
	`¸óãNode
("ASSIGNOP",
yyãxt
);

227  
ASSIGNOP
;

231 
	`¥ötf
("TYPE\n");

232 
yylvÆ
.
node
 = 
	`¸óãNode
("TYPE",
yyãxt
);

233  
TYPE
;

237 
	`¥ötf
("LP\n");

238 
yylvÆ
.
node
 = 
	`¸óãNode
("LP",
yyãxt
);

239  
LP
;

243 
	`¥ötf
("RP\n");

244 
yylvÆ
.
node
 = 
	`¸óãNode
("RP",
yyãxt
);

245  
RP
;

249 
	`¥ötf
("LB\n");

250 
yylvÆ
.
node
 = 
	`¸óãNode
("LB",
yyãxt
);

251  
LB
;

255 
	`¥ötf
("RB\n");

256 
yylvÆ
.
node
 = 
	`¸óãNode
("RB",
yyãxt
);

257  
RB
;

261 
	`¥ötf
("LC\n");

262 
yylvÆ
.
node
 = 
	`¸óãNode
("LC",
yyãxt
);

263  
LC
;

267 
	`¥ötf
("RC\n");

268 
yylvÆ
.
node
 = 
	`¸óãNode
("RC",
yyãxt
);

269  
RC
;

273 
	`¥ötf
("STRUCT\n");

274 
yylvÆ
.
node
 = 
	`¸óãNode
("STRUCT",
yyãxt
);

275  
STRUCT
;

279 
	`¥ötf
("RETURN\n");

280 
yylvÆ
.
node
 = 
	`¸óãNode
("RETURN",
yyãxt
);

281  
RETURN
;

285 
	`¥ötf
("IF\n");

286 
yylvÆ
.
node
 = 
	`¸óãNode
("IF",
yyãxt
);

287  
IF
;

291 
	`¥ötf
("ELSE\n");

292 
yylvÆ
.
node
 = 
	`¸óãNode
("ELSE",
yyãxt
);

293  
ELSE
;

297 
	`¥ötf
("BREAK\n");

298 
yylvÆ
.
node
 = 
	`¸óãNode
("BREAK",
yyãxt
);

299  
BREAK
;

303 
	`¥ötf
("CONT\n");

304 
yylvÆ
.
node
 = 
	`¸óãNode
("CONT",
yyãxt
);

305  
CONT
;

310 
	`¥ötf
("FOR\n");

311 
yylvÆ
.
node
 = 
	`¸óãNode
("FOR",
yyãxt
);

312  
FOR
;

316 
	`¥ötf
("INT: %s\n", 
yyãxt
);

317 
yylvÆ
.
node
 = 
	`¸óãNode
("INT",
yyãxt
);

318  
INT
;

321 {
id
} {

322 
	`¥ötf
("ID: %s\n",
yyãxt
);

323 
yylvÆ
.
node
 = 
	`¸óãNode
("ID",
yyãxt
);

324  
ID
;

329 
löecou¡
++;

332 
	}
%%

334 
	$yywøp
()

336 
	`¥ötf
("yywrap\n");

338 
	}
}

340 
Node
* 
	$¸óãNode
(* 
tokí
, * 
c⁄ã¡
)

342 
Node
* 
ªs
;

343 
ªs
 = 
	`mÆloc
((
Node
));

344 
ªs
->
c⁄ã¡
 = 
	`°rdup
(content);

345 
ªs
->
tokí
 = 
	`°rdup
(token);

346 
ªs
->
√xt
 = 
NULL
;

347 
ªs
->
chûd
 = 
NULL
;

348  
ªs
;

349 
	}
}

	@ast.h

1 #i‚de‡
SRC_AST_H_


2 
	#SRC_AST_H_


	)

3 ˛as†
	cEx¥
{

4 
	mpublic
:

5 
vútuÆ
 ~
	$Ex¥
(){}

6 
vútuÆ
 
VÆue


7 
	}
}

	@datastruct.h

1 
	s_©å


3 
	m•a˚
;

4 
	misLe·
;

5 * 
	mty≥
;

6 }
	tAâr
;

8 
	s_node
{

9 * 
	mc⁄ã¡
;

10 * 
	mtokí
;

11 
Aâr
 
	m©å
;

12 
_node
 *
	m√xt
;

13 
_node
 *
	mchûd
;

14 } 
	tNode
;

	@lex.yy.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#FLEX_SCANNER


	)

9 
	#YY_FLEX_MAJOR_VERSION
 2

	)

10 
	#YY_FLEX_MINOR_VERSION
 5

	)

11 
	#YY_FLEX_SUBMINOR_VERSION
 35

	)

12 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

13 
	#FLEX_BETA


	)

19 
	~<°dio.h
>

20 
	~<°rög.h
>

21 
	~<î∫o.h
>

22 
	~<°dlib.h
>

28 #i‚de‡
FLEXINT_H


29 
	#FLEXINT_H


	)

33 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

38 #i‚de‡
__STDC_LIMIT_MACROS


39 
	#__STDC_LIMIT_MACROS
 1

	)

42 
	~<öây≥s.h
>

43 
öt8_t
 
	tÊex_öt8_t
;

44 
uöt8_t
 
	tÊex_uöt8_t
;

45 
öt16_t
 
	tÊex_öt16_t
;

46 
uöt16_t
 
	tÊex_uöt16_t
;

47 
öt32_t
 
	tÊex_öt32_t
;

48 
uöt32_t
 
	tÊex_uöt32_t
;

50 sig√d 
	tÊex_öt8_t
;

51 
	tÊex_öt16_t
;

52 
	tÊex_öt32_t
;

53 
	tÊex_uöt8_t
;

54 
	tÊex_uöt16_t
;

55 
	tÊex_uöt32_t
;

58 #i‚de‡
INT8_MIN


59 
	#INT8_MIN
 (-128)

	)

61 #i‚de‡
INT16_MIN


62 
	#INT16_MIN
 (-32767-1)

	)

64 #i‚de‡
INT32_MIN


65 
	#INT32_MIN
 (-2147483647-1)

	)

67 #i‚de‡
INT8_MAX


68 
	#INT8_MAX
 (127)

	)

70 #i‚de‡
INT16_MAX


71 
	#INT16_MAX
 (32767)

	)

73 #i‚de‡
INT32_MAX


74 
	#INT32_MAX
 (2147483647)

	)

76 #i‚de‡
UINT8_MAX


77 
	#UINT8_MAX
 (255U)

	)

79 #i‚de‡
UINT16_MAX


80 
	#UINT16_MAX
 (65535U)

	)

82 #i‚de‡
UINT32_MAX


83 
	#UINT32_MAX
 (4294967295U)

	)

90 #ifde‡
__˝lu•lus


93 
	#YY_USE_CONST


	)

98 #i‡
deföed
 (
__STDC__
)

100 
	#YY_USE_CONST


	)

105 #ifde‡
YY_USE_CONST


106 
	#yyc⁄°
 c⁄°

	)

108 
	#yyc⁄°


	)

112 
	#YY_NULL
 0

	)

119 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

125 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

131 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

132 
	#YYSTATE
 
YY_START


	)

135 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

138 
	#YY_NEW_FILE
 
	`yyª°¨t
(
yyö
 )

	)

140 
	#YY_END_OF_BUFFER_CHAR
 0

	)

143 #i‚de‡
YY_BUF_SIZE


144 #ifde‡
__ü64__


149 
	#YY_BUF_SIZE
 32768

	)

151 
	#YY_BUF_SIZE
 16384

	)

157 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

159 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


160 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

161 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

164 
yyÀng
;

166 
FILE
 *
yyö
, *
yyout
;

168 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

169 
	#EOB_ACT_END_OF_FILE
 1

	)

170 
	#EOB_ACT_LAST_MATCH
 2

	)

172 
	#YY_LESS_LINENO
(
n
)

	)

175 
	#yyÀss
(
n
) \

179 
yyÀss_ma¸o_¨g
 = (
n
); \

180 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

181 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

182 
YY_RESTORE_YY_MORE_OFFSET
 \

183 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

184 
YY_DO_BEFORE_ACTION
; \

186  0 )

	)

188 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

190 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


191 
	#YY_TYPEDEF_YY_SIZE_T


	)

192 
size_t
 
	tyy_size_t
;

195 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


196 
	#YY_STRUCT_YY_BUFFER_STATE


	)

197 
	syy_buf„r_°©e


199 
FILE
 *
	myy_öput_fûe
;

201 *
	myy_ch_buf
;

202 *
	myy_buf_pos
;

207 
yy_size_t
 
	myy_buf_size
;

212 
	myy_n_ch¨s
;

218 
	myy_is_our_buf„r
;

225 
	myy_is_öãø˘ive
;

231 
	myy_©_bﬁ
;

233 
	myy_bs_löío
;

234 
	myy_bs_cﬁumn
;

239 
	myy_fûl_buf„r
;

241 
	myy_buf„r_°©us
;

243 
	#YY_BUFFER_NEW
 0

	)

244 
	#YY_BUFFER_NORMAL
 1

	)

255 
	#YY_BUFFER_EOF_PENDING
 2

	)

261 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

262 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

263 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

271 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

272 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

273 : 
NULL
)

	)

278 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

281 
	gyy_hﬁd_ch¨
;

282 
	gyy_n_ch¨s
;

283 
	gyyÀng
;

286 *
	gyy_c_buf_p
 = (*) 0;

287 
	gyy_öô
 = 0;

288 
	gyy_°¨t
 = 0;

293 
	gyy_did_buf„r_swôch_⁄_eof
;

295 
yyª°¨t
 (
FILE
 *
öput_fûe
 );

296 
yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

297 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

298 
yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

299 
yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

300 
yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

301 
yyp›_buf„r_°©e
 ();

303 
yyísuª_buf„r_°ack
 ();

304 
yy_lﬂd_buf„r_°©e
 ();

305 
yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

307 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

309 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

310 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

311 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
Àn
 );

313 *
yyÆloc
 (
yy_size_t
 );

314 *
yyªÆloc
 (*,
yy_size_t
 );

315 
yy‰ì
 (* );

317 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

319 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

321 i‡–! 
YY_CURRENT_BUFFER
 ){ \

322 
	`yyísuª_buf„r_°ack
 (); \

323 
YY_CURRENT_BUFFER_LVALUE
 = \

324 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 ); \

326 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

327 }

	)

329 
	#yy_£t_bﬁ
(
©_bﬁ
) \

331 i‡–! 
YY_CURRENT_BUFFER
 ){\

332 
	`yyísuª_buf„r_°ack
 (); \

333 
YY_CURRENT_BUFFER_LVALUE
 = \

334 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 ); \

336 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

337 }

	)

339 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

343 
	tYY_CHAR
;

345 
FILE
 *
	gyyö
 = (FILE *Ë0, *
	gyyout
 = (FILE *) 0;

347 
	tyy_°©e_ty≥
;

349 
yylöío
;

351 
	gyylöío
 = 1;

353 *
yyãxt
;

354 
	#yyãxt_±r
 
yyãxt


	)

356 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

357 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

358 
yy_gë_√xt_buf„r
 ();

359 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

364 
	#YY_DO_BEFORE_ACTION
 \

365 (
yyãxt_±r
Ë
yy_bp
; \

366 
yyÀng
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

367 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

368 *
yy_˝
 = '\0'; \

369 (
yy_c_buf_p
Ë
yy_˝
;

	)

371 
	#YY_NUM_RULES
 53

	)

372 
	#YY_END_OF_BUFFER
 54

	)

375 
	syy_å™s_öfo


377 
Êex_öt32_t
 
	myy_vîify
;

378 
Êex_öt32_t
 
	myy_nxt
;

380 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[91] =

393 
yyc⁄°
 
Êex_öt32_t
 
	gyy_ec
[256] =

425 
yyc⁄°
 
Êex_öt32_t
 
	gyy_mëa
[44] =

434 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ba£
[92] =

449 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[92] =

464 
yyc⁄°
 
Êex_öt16_t
 
	gyy_nxt
[151] =

484 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[151] =

504 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

505 *
	gyy_œ°_ac˚±ög_˝os
;

507 
yy_Êex_debug
;

508 
	gyy_Êex_debug
 = 0;

513 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

514 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

515 
	#YY_MORE_ADJ
 0

	)

516 
	#YY_RESTORE_YY_MORE_OFFSET


	)

517 *
	gyyãxt
;

520 
	~"d©a°ru˘.h
"

521 
	~"smÆlc.èb.h
"

523 
	~<°dio.h
>

524 
	~<°rög.h
>

527 
	glöecou¡
 = 1;

528 
Node
* 
¸óãNode
(*, *);

531 
	#INITIAL
 0

	)

533 #i‚de‡
YY_NO_UNISTD_H


538 
	~<uni°d.h
>

541 #i‚de‡
YY_EXTRA_TYPE


542 
	#YY_EXTRA_TYPE
 *

	)

545 
yy_öô_globÆs
 ();

550 
yyÀx_de°roy
 ();

552 
yygë_debug
 ();

554 
yy£t_debug
 (
debug_Êag
 );

556 
YY_EXTRA_TYPE
 
yygë_exåa
 ();

558 
yy£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

560 
FILE
 *
yygë_ö
 ();

562 
yy£t_ö
 (
FILE
 * 
ö_°r
 );

564 
FILE
 *
yygë_out
 ();

566 
yy£t_out
 (
FILE
 * 
out_°r
 );

568 
yygë_Àng
 ();

570 *
yygë_ãxt
 ();

572 
yygë_löío
 ();

574 
yy£t_löío
 (
löe_numbî
 );

580 #i‚de‡
YY_SKIP_YYWRAP


581 #ifde‡
__˝lu•lus


582 "C" 
yywøp
 ();

584 
yywøp
 ();

588 
yyu≈ut
 (
c
,*
buf_±r
 );

590 #i‚de‡
yyãxt_±r


591 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

594 #ifde‡
YY_NEED_STRLEN


595 
yy_Êex_°æí
 (
yyc⁄°
 * );

598 #i‚de‡
YY_NO_INPUT


600 #ifde‡
__˝lu•lus


601 
yyöput
 ();

603 
öput
 ();

609 #i‚de‡
YY_READ_BUF_SIZE


610 #ifde‡
__ü64__


612 
	#YY_READ_BUF_SIZE
 16384

	)

614 
	#YY_READ_BUF_SIZE
 8192

	)

619 #i‚de‡
ECHO


623 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
yyãxt
, 
yyÀng
, 1, 
yyout
 )Ë{} } 0)

	)

629 #i‚de‡
YY_INPUT


630 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

631 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

633 
c
 = '*'; \

634 
size_t
 
n
; \

635  
n
 = 0;Ç < 
max_size
 && \

636 (
c
 = 
	`gëc
–
yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

637 
buf
[
n
] = (Ë
c
; \

638 i‡–
c
 == '\n' ) \

639 
buf
[
n
++] = (Ë
c
; \

640 i‡–
c
 =
EOF
 && 
	`„º‹
–
yyö
 ) ) \

641 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

642 
ªsu…
 = 
n
; \

646 
î∫o
=0; \

647  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
yyö
))==0 && 
	`„º‹
(yyin)) \

649 if–
î∫o
 !
EINTR
) \

651 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

654 
î∫o
=0; \

655 
	`˛óªº
(
yyö
); \

659 

	)

666 #i‚de‡
yyãrmö©e


667 
	#yyãrmö©e
(Ë 
YY_NULL


	)

671 #i‚de‡
YY_START_STACK_INCR


672 
	#YY_START_STACK_INCR
 25

	)

676 #i‚de‡
YY_FATAL_ERROR


677 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

685 #i‚de‡
YY_DECL


686 
	#YY_DECL_IS_OURS
 1

	)

688 
yyÀx
 ();

690 
	#YY_DECL
 
	`yyÀx
 ()

	)

696 #i‚de‡
YY_USER_ACTION


697 
	#YY_USER_ACTION


	)

701 #i‚de‡
YY_BREAK


702 
	#YY_BREAK
 ;

	)

705 
	#YY_RULE_SETUP
 \

706 
YY_USER_ACTION


	)

710 
	gYY_DECL


712 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

713 *
	gyy_˝
, *
	gyy_bp
;

714 
	gyy_a˘
;

720 i‡–!(
	gyy_öô
) )

722 (
	gyy_öô
) = 1;

724 #ifde‡
YY_USER_INIT


725 
	gYY_USER_INIT
;

728 i‡–! (
	gyy_°¨t
) )

729 (
	gyy_°¨t
) = 1;

731 i‡–! 
	gyyö
 )

732 
	gyyö
 = 
°dö
;

734 i‡–! 
	gyyout
 )

735 
	gyyout
 = 
°dout
;

737 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

738 
yyísuª_buf„r_°ack
 ();

739 
	gYY_CURRENT_BUFFER_LVALUE
 =

740 
yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 );

743 
yy_lﬂd_buf„r_°©e
( );

748 
	gyy_˝
 = (
yy_c_buf_p
);

751 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

756 
	gyy_bp
 = 
yy_˝
;

758 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

759 
	gyy_m©ch
:

762 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)];

763 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

765 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

766 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

768  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

770 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

771 i‡–
	gyy_cuºít_°©e
 >= 91 )

772 
yy_c
 = 
yy_mëa
[() yy_c];

774 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

775 ++
	gyy_˝
;

777  
	gyy_ba£
[
yy_cuºít_°©e
] != 107 );

779 
	gyy_föd_a˘i⁄
:

780 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

781 i‡–
	gyy_a˘
 == 0 )

783 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

784 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

785 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

788 
	gYY_DO_BEFORE_ACTION
;

790 
	gdo_a˘i⁄
:

792  
yy_a˘
 )

796 *
yy_˝
 = (
yy_hﬁd_ch¨
);

797 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

798 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

799 
	gyy_föd_a˘i⁄
;

802 
YY_RULE_SETUP


805 
¥ötf
("DOT\n");

806 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("DOT",
yyãxt
);

807  
	gDOT
;

809 
YY_BREAK


811 
YY_RULE_SETUP


814 
¥ötf
("NOTEQ\n");

815 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("NOTEQ",
yyãxt
);

816  
	gNOTEQ
;

818 
YY_BREAK


820 
YY_RULE_SETUP


823 
¥ötf
("EQU\n");

824 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("EQU",
yyãxt
);

825  
	gEQU
;

827 
YY_BREAK


829 
YY_RULE_SETUP


832 
¥ötf
("SHLEFTAN\n");

833 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("SHLEFTAN",
yyãxt
);

834  
	gSHLEFTAN
;

836 
YY_BREAK


838 
YY_RULE_SETUP


841 
¥ötf
("SHRIGHTAN\n");

842 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("SHRIGHTAN",
yyãxt
);

843  
	gSHRIGHTAN
;

845 
YY_BREAK


847 
YY_RULE_SETUP


850 
¥ötf
("SHLEFT\n");

851 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("SHLEFT",
yyãxt
);

852  
	gSHLEFT
;

854 
YY_BREAK


856 
YY_RULE_SETUP


859 
¥ötf
("SHRIGHT\n");

860 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("SHRIGHT",
yyãxt
);

861  
	gSHRIGHT
;

863 
YY_BREAK


865 
YY_RULE_SETUP


868 
¥ötf
("INCR\n");

869 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("INCR",
yyãxt
);

870  
	gINCR
;

872 
YY_BREAK


874 
YY_RULE_SETUP


877 
¥ötf
("DECR\n");

878 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("DECR",
yyãxt
);

879  
	gDECR
;

881 
YY_BREAK


883 
YY_RULE_SETUP


886 
¥ötf
("BANDAN\n");

887 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("BANDAN",
yyãxt
);

888  
	gBANDAN
;

890 
YY_BREAK


892 
YY_RULE_SETUP


895 
¥ötf
("BXORAN\n");

896 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("BXORAN",
yyãxt
);

897  
	gBXORAN
;

899 
YY_BREAK


901 
YY_RULE_SETUP


904 
¥ötf
("BORAN\n");

905 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("BORAN",
yyãxt
);

906  
	gBORAN
;

908 
YY_BREAK


910 
YY_RULE_SETUP


913 
¥ötf
("PLUSAN\n");

914 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("PLUSAN",
yyãxt
);

915  
	gPLUSAN
;

917 
YY_BREAK


919 
YY_RULE_SETUP


922 
¥ötf
("MINUSAN\n");

923 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("MINUSAN",
yyãxt
);

924  
	gMINUSAN
;

926 
YY_BREAK


928 
YY_RULE_SETUP


931 
¥ötf
("TIMESAN\n");

932 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("TIMESAN",
yyãxt
);

933  
	gTIMESAN
;

935 
YY_BREAK


937 
YY_RULE_SETUP


940 
¥ötf
("DIVAN\n");

941 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("DIVAN",
yyãxt
);

942  
	gDIVAN
;

944 
YY_BREAK


946 
YY_RULE_SETUP


949 
¥ötf
("LEQ\n");

950 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("LEQ",
yyãxt
);

951  
	gLEQ
;

953 
YY_BREAK


955 
YY_RULE_SETUP


958 
¥ötf
("GEQ\n");

959 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("GEQ",
yyãxt
);

960  
	gGEQ
;

962 
YY_BREAK


964 
YY_RULE_SETUP


967 
¥ötf
("LOGAND\n");

968 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("LOGAND",
yyãxt
);

969  
	gLOGAND
;

971 
YY_BREAK


973 
YY_RULE_SETUP


976 
¥ötf
("LOGOR\n");

977 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("LOGOR",
yyãxt
);

978  
	gLOGOR
;

980 
YY_BREAK


982 
YY_RULE_SETUP


985 
¥ötf
("LOGNOT\n");

986 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("LOGNOT",
yyãxt
);

987  
	gLOGNOT
;

989 
YY_BREAK


991 
YY_RULE_SETUP


994 
¥ötf
("PLUS\n");

995 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("PLUS",
yyãxt
);

996  
	gPLUS
;

998 
YY_BREAK


1000 
YY_RULE_SETUP


1003 
¥ötf
("MINUS\n");

1004 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("MINUS",
yyãxt
);

1005  
	gMINUS
;

1007 
YY_BREAK


1009 
YY_RULE_SETUP


1012 
¥ötf
("TIMES\n");

1013 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("TIMES",
yyãxt
);

1014  
	gTIMES
;

1016 
YY_BREAK


1018 
YY_RULE_SETUP


1021 
¥ötf
("DIV\n");

1022 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("DIV",
yyãxt
);

1023  
	gDIV
;

1025 
YY_BREAK


1027 
YY_RULE_SETUP


1030 
¥ötf
("MOD\n");

1031 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("MOD",
yyãxt
);

1032  
	gMOD
;

1034 
YY_BREAK


1036 
YY_RULE_SETUP


1039 
¥ötf
("BITAND\n");

1040 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("BITAND",
yyãxt
);

1041  
	gBITAND
;

1043 
YY_BREAK


1045 
YY_RULE_SETUP


1048 
¥ötf
("BITXOR\n");

1049 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("BITXOR",
yyãxt
);

1050  
	gBITXOR
;

1052 
YY_BREAK


1054 
YY_RULE_SETUP


1057 
¥ötf
("BITOR\n");

1058 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("BITOR",
yyãxt
);

1059  
	gBITOR
;

1061 
YY_BREAK


1063 
YY_RULE_SETUP


1066 
¥ötf
("BITNOT\n");

1067 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("BITNOT",
yyãxt
);

1068  
	gBITNOT
;

1070 
YY_BREAK


1072 
YY_RULE_SETUP


1075 
¥ötf
("LT\n");

1076 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("LT",
yyãxt
);

1077  
	gLT
;

1079 
YY_BREAK


1081 
YY_RULE_SETUP


1084 
¥ötf
("GT\n");

1085 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("GT",
yyãxt
);

1086  
	gGT
;

1088 
YY_BREAK


1090 
YY_RULE_SETUP


1093 
¥ötf
("SEMI\n");

1094 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("SEMI",
yyãxt
);

1095  
	gSEMI
;

1097 
YY_BREAK


1099 
YY_RULE_SETUP


1102 
¥ötf
("COMMA\n");

1103 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("COMMA",
yyãxt
);

1104  
	gCOMMA
;

1106 
YY_BREAK


1108 
YY_RULE_SETUP


1111 
¥ötf
("ASSIGNOP\n");

1112 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("ASSIGNOP",
yyãxt
);

1113  
	gASSIGNOP
;

1115 
YY_BREAK


1117 
YY_RULE_SETUP


1120 
¥ötf
("TYPE\n");

1121 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("TYPE",
yyãxt
);

1122  
	gTYPE
;

1124 
YY_BREAK


1126 
YY_RULE_SETUP


1129 
¥ötf
("LP\n");

1130 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("LP",
yyãxt
);

1131  
	gLP
;

1133 
YY_BREAK


1135 
YY_RULE_SETUP


1138 
¥ötf
("RP\n");

1139 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("RP",
yyãxt
);

1140  
	gRP
;

1142 
YY_BREAK


1144 
YY_RULE_SETUP


1147 
¥ötf
("LB\n");

1148 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("LB",
yyãxt
);

1149  
	gLB
;

1151 
YY_BREAK


1153 
YY_RULE_SETUP


1156 
¥ötf
("RB\n");

1157 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("RB",
yyãxt
);

1158  
	gRB
;

1160 
YY_BREAK


1162 
YY_RULE_SETUP


1165 
¥ötf
("LC\n");

1166 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("LC",
yyãxt
);

1167  
	gLC
;

1169 
YY_BREAK


1171 
YY_RULE_SETUP


1174 
¥ötf
("RC\n");

1175 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("RC",
yyãxt
);

1176  
	gRC
;

1178 
YY_BREAK


1180 
YY_RULE_SETUP


1183 
¥ötf
("STRUCT\n");

1184 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("STRUCT",
yyãxt
);

1185  
	gSTRUCT
;

1187 
YY_BREAK


1189 
YY_RULE_SETUP


1192 
¥ötf
("RETURN\n");

1193 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("RETURN",
yyãxt
);

1194  
	gRETURN
;

1196 
YY_BREAK


1198 
YY_RULE_SETUP


1201 
¥ötf
("IF\n");

1202 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("IF",
yyãxt
);

1203  
	gIF
;

1205 
YY_BREAK


1207 
YY_RULE_SETUP


1210 
¥ötf
("ELSE\n");

1211 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("ELSE",
yyãxt
);

1212  
	gELSE
;

1214 
YY_BREAK


1216 
YY_RULE_SETUP


1219 
¥ötf
("BREAK\n");

1220 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("BREAK",
yyãxt
);

1221  
	gBREAK
;

1223 
YY_BREAK


1225 
YY_RULE_SETUP


1228 
¥ötf
("CONT\n");

1229 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("CONT",
yyãxt
);

1230  
	gCONT
;

1232 
YY_BREAK


1234 
YY_RULE_SETUP


1237 
¥ötf
("FOR\n");

1238 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("FOR",
yyãxt
);

1239  
	gFOR
;

1241 
YY_BREAK


1243 
YY_RULE_SETUP


1246 
¥ötf
("INT: %s\n", 
yyãxt
);

1247 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("INT",
yyãxt
);

1248  
	gINT
;

1250 
YY_BREAK


1252 
YY_RULE_SETUP


1255 
¥ötf
("ID: %s\n",
yyãxt
);

1256 
	gyylvÆ
.
	gnode
 = 
¸óãNode
("ID",
yyãxt
);

1257  
	gID
;

1259 
YY_BREAK


1262 
YY_RULE_SETUP


1265 
löecou¡
++;

1267 
YY_BREAK


1269 
YY_RULE_SETUP


1271 
ECHO
;

1272 
	gYY_BREAK


1274 
YY_STATE_EOF
(
INITIAL
):

1275 
yyãrmö©e
();

1277 
	gYY_END_OF_BUFFER
:

1280 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

1283 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1284 
YY_RESTORE_YY_MORE_OFFSET


1286 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

1297 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1298 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
yyö
;

1299 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

1309 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1311 
yy_°©e_ty≥
 
yy_√xt_°©e
;

1313 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1315 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1326 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

1328 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1330 i‡–
	gyy_√xt_°©e
 )

1333 
	gyy_˝
 = ++(
yy_c_buf_p
);

1334 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1335 
	gyy_m©ch
;

1340 
	gyy_˝
 = (
yy_c_buf_p
);

1341 
	gyy_föd_a˘i⁄
;

1345  
yy_gë_√xt_buf„r
( ) )

1347 
	gEOB_ACT_END_OF_FILE
:

1349 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

1351 i‡–
yywøp
( ) )

1362 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1364 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1365 
	gdo_a˘i⁄
;

1370 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1371 
	gYY_NEW_FILE
;

1376 
	gEOB_ACT_CONTINUE_SCAN
:

1377 (
yy_c_buf_p
) =

1378 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1380 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1382 
	gyy_˝
 = (
yy_c_buf_p
);

1383 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1384 
	gyy_m©ch
;

1386 
	gEOB_ACT_LAST_MATCH
:

1387 (
yy_c_buf_p
) =

1388 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1390 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1392 
	gyy_˝
 = (
yy_c_buf_p
);

1393 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1394 
	gyy_föd_a˘i⁄
;

1400 
YY_FATAL_ERROR
(

1413 
	$yy_gë_√xt_buf„r
 ()

1415 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1416 *
sour˚
 = (
yyãxt_±r
);

1417 
numbî_to_move
, 
i
;

1418 
ªt_vÆ
;

1420 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1421 
	`YY_FATAL_ERROR
(

1424 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1426 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1431  
EOB_ACT_END_OF_FILE
;

1439  
EOB_ACT_LAST_MATCH
;

1446 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

1448  
i
 = 0; i < 
numbî_to_move
; ++i )

1449 *(
de°
++Ë*(
sour˚
++);

1451 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1455 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1459 
num_to_ªad
 =

1460 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1462  
num_to_ªad
 <= 0 )

1466 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER
;

1468 
yy_c_buf_p_off£t
 =

1469 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

1471 i‡–
b
->
yy_is_our_buf„r
 )

1473 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1475 i‡–
√w_size
 <= 0 )

1476 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1478 
b
->
yy_buf_size
 *= 2;

1480 
b
->
yy_ch_buf
 = (*)

1482 
	`yyªÆloc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

1486 
b
->
yy_ch_buf
 = 0;

1488 i‡–! 
b
->
yy_ch_buf
 )

1489 
	`YY_FATAL_ERROR
(

1492 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1494 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1495 
numbî_to_move
 - 1;

1499 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1500 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1503 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1504 (
yy_n_ch¨s
), (
size_t
Ë
num_to_ªad
 );

1506 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1509 i‡–(
yy_n_ch¨s
) == 0 )

1511 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1513 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1514 
	`yyª°¨t
(
yyö
 );

1519 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1520 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1521 
YY_BUFFER_EOF_PENDING
;

1526 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1528 i‡((
yy_size_t
Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1530 
yy_size_t
 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1531 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`yyªÆloc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

1532 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1533 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1536 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1537 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1538 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1540 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1542  
ªt_vÆ
;

1543 
	}
}

1547 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1549 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1550 *
yy_˝
;

1552 
yy_cuºít_°©e
 = (
yy_°¨t
);

1554  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1556 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1557 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1559 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1560 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1562  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1564 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1565 i‡–
yy_cuºít_°©e
 >= 91 )

1566 
yy_c
 = 
yy_mëa
[() yy_c];

1568 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1571  
yy_cuºít_°©e
;

1572 
	}
}

1579 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1581 
yy_is_jam
;

1582 *
yy_˝
 = (
yy_c_buf_p
);

1584 
YY_CHAR
 
yy_c
 = 1;

1585 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1587 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1588 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1590  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1592 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1593 i‡–
yy_cuºít_°©e
 >= 91 )

1594 
yy_c
 = 
yy_mëa
[() yy_c];

1596 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1597 
yy_is_jam
 = (
yy_cuºít_°©e
 == 90);

1599  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1600 
	}
}

1602 
	$yyu≈ut
 (
c
, * 
yy_bp
 )

1604 *
yy_˝
;

1606 
yy_˝
 = (
yy_c_buf_p
);

1609 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1611 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1614 
numbî_to_move
 = (
yy_n_ch¨s
) + 2;

1615 *
de°
 = &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[

1616 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 + 2];

1617 *
sour˚
 =

1618 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
];

1620  
sour˚
 > 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1621 *--
de°
 = *--
sour˚
;

1623 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

1624 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

1625 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 =

1626 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
;

1628 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1629 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

1632 *--
yy_˝
 = (Ë
c
;

1634 (
yyãxt_±r
Ë
yy_bp
;

1635 (
yy_hﬁd_ch¨
Ë*
yy_˝
;

1636 (
yy_c_buf_p
Ë
yy_˝
;

1637 
	}
}

1639 #i‚de‡
YY_NO_INPUT


1640 #ifde‡
__˝lu•lus


1641 
	$yyöput
 ()

1643 
	$öput
 ()

1647 
c
;

1649 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1651 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1657 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1659 *(
yy_c_buf_p
) = '\0';

1663 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

1664 ++(
yy_c_buf_p
);

1666  
	`yy_gë_√xt_buf„r
( ) )

1668 
EOB_ACT_LAST_MATCH
:

1680 
	`yyª°¨t
(
yyö
 );

1684 
EOB_ACT_END_OF_FILE
:

1686 i‡–
	`yywøp
( ) )

1687  
EOF
;

1689 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1690 
YY_NEW_FILE
;

1691 #ifde‡
__˝lu•lus


1692  
	`yyöput
();

1694  
	`öput
();

1698 
EOB_ACT_CONTINUE_SCAN
:

1699 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1705 
c
 = *(*Ë(
yy_c_buf_p
);

1706 *(
yy_c_buf_p
) = '\0';

1707 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1709  
c
;

1710 
	}
}

1718 
	$yyª°¨t
 (
FILE
 * 
öput_fûe
 )

1721 i‡–! 
YY_CURRENT_BUFFER
 ){

1722 
	`yyísuª_buf„r_°ack
 ();

1723 
YY_CURRENT_BUFFER_LVALUE
 =

1724 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 );

1727 
	`yy_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

1728 
	`yy_lﬂd_buf„r_°©e
( );

1729 
	}
}

1735 
	$yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1743 
	`yyísuª_buf„r_°ack
 ();

1744 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1747 i‡–
YY_CURRENT_BUFFER
 )

1750 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1751 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1752 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1755 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1756 
	`yy_lﬂd_buf„r_°©e
( );

1763 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1764 
	}
}

1766 
	$yy_lﬂd_buf„r_°©e
 ()

1768 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1769 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1770 
yyö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1771 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

1772 
	}
}

1780 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

1782 
YY_BUFFER_STATE
 
b
;

1784 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
(–
yy_buf„r_°©e
 ) );

1785 i‡–! 
b
 )

1786 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1788 
b
->
yy_buf_size
 = 
size
;

1793 
b
->
yy_ch_buf
 = (*Ë
	`yyÆloc
(b->
yy_buf_size
 + 2 );

1794 i‡–! 
b
->
yy_ch_buf
 )

1795 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1797 
b
->
yy_is_our_buf„r
 = 1;

1799 
	`yy_öô_buf„r
(
b
,
fûe
 );

1801  
b
;

1802 
	}
}

1808 
	$yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1811 i‡–! 
b
 )

1814 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1815 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1817 i‡–
b
->
yy_is_our_buf„r
 )

1818 
	`yy‰ì
((*Ë
b
->
yy_ch_buf
 );

1820 
	`yy‰ì
((*Ë
b
 );

1821 
	}
}

1823 #i‚de‡
__˝lu•lus


1824 
ißây
 ();

1831 
	$yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

1834 
€ºno
 = 
î∫o
;

1836 
	`yy_Êush_buf„r
(
b
 );

1838 
b
->
yy_öput_fûe
 = 
fûe
;

1839 
b
->
yy_fûl_buf„r
 = 1;

1845 i‡(
b
 !
YY_CURRENT_BUFFER
){

1846 
b
->
yy_bs_löío
 = 1;

1847 
b
->
yy_bs_cﬁumn
 = 0;

1850 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1852 
î∫o
 = 
€ºno
;

1853 
	}
}

1859 
	$yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1861 i‡–! 
b
 )

1864 
b
->
yy_n_ch¨s
 = 0;

1870 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1871 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1873 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1875 
b
->
yy_©_bﬁ
 = 1;

1876 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1878 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1879 
	`yy_lﬂd_buf„r_°©e
( );

1880 
	}
}

1888 
	$yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1890 i‡(
√w_buf„r
 =
NULL
)

1893 
	`yyísuª_buf„r_°ack
();

1896 i‡–
YY_CURRENT_BUFFER
 )

1899 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1900 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1901 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1905 i‡(
YY_CURRENT_BUFFER
)

1906 (
yy_buf„r_°ack_t›
)++;

1907 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1910 
	`yy_lﬂd_buf„r_°©e
( );

1911 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1912 
	}
}

1918 
	$yyp›_buf„r_°©e
 ()

1920 i‡(!
YY_CURRENT_BUFFER
)

1923 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1924 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1925 i‡((
yy_buf„r_°ack_t›
) > 0)

1926 --(
yy_buf„r_°ack_t›
);

1928 i‡(
YY_CURRENT_BUFFER
) {

1929 
	`yy_lﬂd_buf„r_°©e
( );

1930 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1932 
	}
}

1937 
	$yyísuª_buf„r_°ack
 ()

1939 
num_to_Æloc
;

1941 i‡(!(
yy_buf„r_°ack
)) {

1947 
num_to_Æloc
 = 1;

1948 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyÆloc


1949 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1951 i‡–! (
yy_buf„r_°ack
) )

1952 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

1954 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

1956 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1957 (
yy_buf„r_°ack_t›
) = 0;

1961 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

1964 
grow_size
 = 8 ;

1966 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

1967 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyªÆloc


1968 ((
yy_buf„r_°ack
),

1969 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1971 i‡–! (
yy_buf„r_°ack
) )

1972 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

1975 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

1976 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1978 
	}
}

1986 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

1988 
YY_BUFFER_STATE
 
b
;

1990 i‡–
size
 < 2 ||

1991 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1992 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1996 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
(–
yy_buf„r_°©e
 ) );

1997 i‡–! 
b
 )

1998 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

2000 
b
->
yy_buf_size
 = 
size
 - 2;

2001 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

2002 
b
->
yy_is_our_buf„r
 = 0;

2003 
b
->
yy_öput_fûe
 = 0;

2004 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

2005 
b
->
yy_is_öãø˘ive
 = 0;

2006 
b
->
yy_©_bﬁ
 = 1;

2007 
b
->
yy_fûl_buf„r
 = 0;

2008 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2010 
	`yy_swôch_to_buf„r
(
b
 );

2012  
b
;

2013 
	}
}

2023 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

2026  
	`yy_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

2027 
	}
}

2036 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
_yybyãs_Àn
 )

2038 
YY_BUFFER_STATE
 
b
;

2039 *
buf
;

2040 
yy_size_t
 
n
;

2041 
i
;

2044 
n
 = 
_yybyãs_Àn
 + 2;

2045 
buf
 = (*Ë
	`yyÆloc
(
n
 );

2046 i‡–! 
buf
 )

2047 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

2049  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

2050 
buf
[
i
] = 
yybyãs
[i];

2052 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

2054 
b
 = 
	`yy_sˇn_buf„r
(
buf
,
n
 );

2055 i‡–! 
b
 )

2056 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

2061 
b
->
yy_is_our_buf„r
 = 1;

2063  
b
;

2064 
	}
}

2066 #i‚de‡
YY_EXIT_FAILURE


2067 
	#YY_EXIT_FAILURE
 2

	)

2070 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

2072 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

2073 
	`exô
–
YY_EXIT_FAILURE
 );

2074 
	}
}

2078 #unde‡
yyÀss


2079 
	#yyÀss
(
n
) \

2083 
yyÀss_ma¸o_¨g
 = (
n
); \

2084 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

2085 
yyãxt
[
yyÀng
] = (
yy_hﬁd_ch¨
); \

2086 (
yy_c_buf_p
Ë
yyãxt
 + 
yyÀss_ma¸o_¨g
; \

2087 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

2088 *(
yy_c_buf_p
) = '\0'; \

2089 
yyÀng
 = 
yyÀss_ma¸o_¨g
; \

2091  0 )

	)

2098 
	$yygë_löío
 ()

2101  
yylöío
;

2102 
	}
}

2107 
FILE
 *
	$yygë_ö
 ()

2109  
yyö
;

2110 
	}
}

2115 
FILE
 *
	$yygë_out
 ()

2117  
yyout
;

2118 
	}
}

2123 
	$yygë_Àng
 ()

2125  
yyÀng
;

2126 
	}
}

2132 *
	$yygë_ãxt
 ()

2134  
yyãxt
;

2135 
	}
}

2141 
	$yy£t_löío
 (
löe_numbî
 )

2144 
yylöío
 = 
löe_numbî
;

2145 
	}
}

2153 
	$yy£t_ö
 (
FILE
 * 
ö_°r
 )

2155 
yyö
 = 
ö_°r
 ;

2156 
	}
}

2158 
	$yy£t_out
 (
FILE
 * 
out_°r
 )

2160 
yyout
 = 
out_°r
 ;

2161 
	}
}

2163 
	$yygë_debug
 ()

2165  
yy_Êex_debug
;

2166 
	}
}

2168 
	$yy£t_debug
 (
bdebug
 )

2170 
yy_Êex_debug
 = 
bdebug
 ;

2171 
	}
}

2173 
	$yy_öô_globÆs
 ()

2179 (
yy_buf„r_°ack
) = 0;

2180 (
yy_buf„r_°ack_t›
) = 0;

2181 (
yy_buf„r_°ack_max
) = 0;

2182 (
yy_c_buf_p
) = (*) 0;

2183 (
yy_öô
) = 0;

2184 (
yy_°¨t
) = 0;

2187 #ifde‡
YY_STDINIT


2188 
yyö
 = 
°dö
;

2189 
yyout
 = 
°dout
;

2191 
yyö
 = (
FILE
 *) 0;

2192 
yyout
 = (
FILE
 *) 0;

2199 
	}
}

2202 
	$yyÀx_de°roy
 ()

2206 
YY_CURRENT_BUFFER
){

2207 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2208 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2209 
	`yyp›_buf„r_°©e
();

2213 
	`yy‰ì
((
yy_buf„r_°ack
) );

2214 (
yy_buf„r_°ack
Ë
NULL
;

2218 
	`yy_öô_globÆs
( );

2221 
	}
}

2227 #i‚de‡
yyãxt_±r


2228 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

2230 
i
;

2231  
i
 = 0; i < 
n
; ++i )

2232 
s1
[
i
] = 
s2
[i];

2233 
	}
}

2236 #ifde‡
YY_NEED_STRLEN


2237 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

2239 
n
;

2240  
n
 = 0; 
s
[n]; ++n )

2243  
n
;

2244 
	}
}

2247 *
	$yyÆloc
 (
yy_size_t
 
size
 )

2249  (*Ë
	`mÆloc
–
size
 );

2250 
	}
}

2252 *
	$yyªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

2261  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

2262 
	}
}

2264 
	$yy‰ì
 (* 
±r
 )

2266 
	`‰ì
–(*Ë
±r
 );

2267 
	}
}

2269 
	#YYTABLES_NAME
 "yyèbÀs"

	)

2275 
	$yywøp
()

2277 
	`¥ötf
("yywrap\n");

2279 
	}
}

2281 
Aâr
 
	$öôAâr
()

2283 
Aâr
 
ªt
;

2284 
ªt
.
•a˚
 = 0;

2285 
ªt
.
isLe·
 = 0;

2286  
ªt
;

2287 
	}
}

2289 
Node
* 
	$öôNode
()

2291 
Node
* 
ªt
;

2292 
ªt
 = (
Node
*)
	`mÆloc
((Node));

2294 
ªt
->
©å
 = 
	`öôAâr
();

2295  
ªt
;

2296 
	}
}

2298 
Node
* 
	$¸óãNode
(* 
tokí
, * 
c⁄ã¡
)

2300 
Node
* 
ªs
;

2301 
ªs
 = (
Node
*)
	`mÆloc
((Node));

2302 
ªs
->
c⁄ã¡
 = 
	`°rdup
(content);

2303 
ªs
->
©å
 = 
	`öôAâr
();

2304 
ªs
->
tokí
 = 
	`°rdup
(token);

2305 
ªs
->
√xt
 = 
NULL
;

2306 
ªs
->
chûd
 = 
NULL
;

2307  
ªs
;

2308 
	}
}

	@main.cpp

1 
	~<io°ªam
>

2 
	~<°rög
>

3 
	~<f°ªam
>

4 
	~<m≠
>

5 
	~<ve˘‹
>

6 
	~"d©a°ru˘.h
"

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~<c°rög
>

10 
	~"Œvm/IR/Vîifõr.h
"

11 
	~"Œvm/IR/DîivedTy≥s.h
"

12 
	~"Œvm/IR/IRBuûdî.h
"

13 
	~"Œvm/IR/LLVMC⁄ãxt.h
"

14 
	~"Œvm/IR/ModuÀ.h
"

15 
	~"Œvm/Suµ‹t/øw_os_o°ªam.h
"

16 
	~"Œvm/IR/Vîifõr.h
"

17 
	~"Œvm/Executi⁄Engöe/Executi⁄Engöe.h
"

18 
	~"Œvm/Executi⁄Engöe/MCJIT.h
"

19 
	~"Œvm/Executi⁄Engöe/Se˘i⁄Mem‹yM™agî.h
"

20 
	~"Œvm/Executi⁄Engöe/GíîicVÆue.h
"

23 
usög
 
«me•a˚
 
	g°d
;

24 
usög
 
«me•a˚
 
	gŒvm
;

25 
	#CODE_LENGTH
 250

	)

27 
of°ªam
 
	gfout
;

28 
	gcou¡î
 = 0;

32 
Node
* 
∑r£
(* 
fûíame
);

33 
wÆkThrough
(
Node
* 
n
,
œyî
);

37 
Node
* 
hód
;

39 
VÆue
* 
code_PROGRAM
(
Node
* 
n
);

40 
VÆue
* 
code_EXTDEFS
(
Node
* 
n
);

41 
VÆue
* 
code_EXTDEF
(
Node
* 
n
);

42 
Ty≥
* 
code_SPEC
(
Node
* 
n
);

43 
°rög
 
code_FUN_Name
(
Node
* 
n
);

44 
	gve˘‹
<
	gTy≥
*> 
code_FUNC_ARG_Ty≥
(
Node
* 
n
);

45 
	gve˘‹
<
	gTy≥
*> 
code_PARAS_Ty≥
(
Node
* 
n
);

46 
	gve˘‹
<
	g°rög
> 
code_FUNC_ARG_Name
(
Node
* 
n
);

47 
	gve˘‹
<
	g°rög
> 
code_PARA_ARG_Name
(
Node
* 
n
);

48 
code_EXTVARS
(
Node
* 
n
, 
Ty≥
* 
t
);

49 
code_DECS_INNER
(
Node
* 
n
, 
Fun˘i⁄
* 
f
, 
Ty≥
* 
t
);

50 
code_DEC_INNER
(
Node
* 
n
, 
Fun˘i⁄
* 
f
, 
Ty≥
* 
t
);

51 
code_STMTBLOCK
(
Node
* 
n
, 
Fun˘i⁄
* 
f
);

52 
code_STMT
(
Node
* 
n
, 
Fun˘i⁄
* 
f
);

53 
code_DEF_INNER
(
Node
* 
n
, 
Fun˘i⁄
* 
f
);

54 
VÆue
* 
code_EXP
(
Node
* 
n
);

55 
VÆue
* 
code_INIT
(
Node
* 
n
);

56 
code_STMTS
(
Node
* 
n
, 
Fun˘i⁄
* 
f
);

59 
boﬁ
 
	gñ£Fœg
 = 
åue
;

60 
boﬁ
 
	gthíFœg
 = 
åue
;

65 
	$îr‹Occur
(
°rög
 
msg
)

67 
fout
.
	`˛o£
();

68 
fout
.
	`›í
("CompileError");

69 
fout
 << "Eº‹" << 
ídl
;

70 
fout
 << 
msg
 << 
ídl
;

71 
fout
.
	`˛o£
();

72 
˚º
 << 
msg
;

73 
	`exô
(0);

74 
	}
}

78 
	gm≠
<
	t°rög
, 
	tVÆue
*> 
	tív
;

79 
	gm≠
<
	t°rög
, 
	tTy≥
*> 
	tty≥Env
;

81 
	gLLVMC⁄ãxt
& 
	gc⁄ãxt
 = 
gëGlobÆC⁄ãxt
();

82 
ModuÀ
* 
	gmoduÀ
;

83 
	gIRBuûdî
<> 
buûdî
(
gëGlobÆC⁄ãxt
());

84 
	gm≠
<
	g°rög
, 
	gŒvm
::
Ty≥
*> 
NameTy≥s
;

85 
	gm≠
<
	g°rög
, 
	gŒvm
::
VÆue
*> 
«medVÆues
;

86 
	gve˘‹
<
	gív
> 
	gívs
;

87 
	gve˘‹
<
	gty≥Env
> 
	gty≥Envs
;

88 
	gm≠
<
	g°rög
, 
	gFun˘i⁄
*> 
	gfEnv
;

89 
	gm≠
<
	g°rög
, 
	gív
> 
	gfuncEnv
;

90 
ív
 
	gnowEnv
;

91 
øw_os_o°ªam
 
out
(
cout
) ;

92 
BasicBlock
* 
	gbªakBlock
;

93 
BasicBlock
* 
	gc⁄tBlock
;

94 
ív
 
	gglobÆEnv
;

95 
Executi⁄Engöe
* 
	gexìng
;

96 
boﬁ
 
	gisLe·
 = 
Ál£
;

97 
	$ªmove_mu…i_ãrmi
(
Fun˘i⁄
* 
f
)

99 autÿ
b
 = 
f
->
	`begö
(); b !f->
	`íd
(); ++b)

101 
boﬁ
 
Êag
 = 
Ál£
;

102 autÿ
i
=
b
->
	`begö
(); i!b->
	`íd
(); ++i)

104 i‡(
i
->
	`isTîmö©‹
())

106 i‡(
Êag
)

107 
i
->
	`îa£FromP¨ít
();

109 
Êag
 = 
åue
;

113 
	}
}

116 
AŒoˇIn°
* 
	$Cª©eE¡ryBlockAŒoˇ
(
Fun˘i⁄
* 
f
,
°rög
 
v¨Name
, 
Ty≥
* 
t
)

118 
f
->
	`gëE¡ryBlock
().
	`begö
();

119 
IRBuûdî
<> 
	`tmpB
(&(
f
->
	`gëE¡ryBlock
()), f->gëE¡ryBlock().
	`begö
());

120  
tmpB
.
	`Cª©eAŒoˇ
(
t
, 0, 
v¨Name
.
	`c_°r
());

121  
NULL
;

122 
	}
}

124 
Fun˘i⁄
* 
	$¸óãPrötfFun˘i⁄
()

126 
ve˘‹
<
Ty≥
*> 
¥ötf_¨g_ty≥s
;

127 
¥ötf_¨g_ty≥s
.
	`push_back
(
Ty≥
::
	`gëI¡8PåTy
(
c⁄ãxt
));

129 
Fun˘i⁄Ty≥
* 
¥ötf_ty≥
 = Fun˘i⁄Ty≥::
	`gë
(
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
), 
¥ötf_¨g_ty≥s
, 
åue
);

131 
Fun˘i⁄
* 
func
 = Fun˘i⁄::
	`Cª©e
(
¥ötf_ty≥
, Fun˘i⁄::
Exã∫ÆLökage
, 
	`Twöe
("¥ötf"),
moduÀ
);

133 
func
->
	`£tCÆlögC⁄v
(
CÆlögC⁄v
::
C
);

134  
func
;

135 
	}
}

139 
Fun˘i⁄
* 
	$¸óãWrôeFun˘i⁄
(
Fun˘i⁄
* 
¥ötFn
)

141 
ve˘‹
<
Ty≥
*> 
echo_¨g_ty≥s
;

142 
echo_¨g_ty≥s
.
	`push_back
(
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
));

144 
Fun˘i⁄Ty≥
* 
echo_ty≥
 = Fun˘i⁄Ty≥::
	`gë
(
Ty≥
::
	`gëVoidTy
(
c⁄ãxt
), 
echo_¨g_ty≥s
, 
Ál£
);

146 
Fun˘i⁄
* 
func
 = Fun˘i⁄::
	`Cª©e
(
echo_ty≥
, Fun˘i⁄::
I¡î«lLökage
,
	`Twöe
("wrôe"), 
moduÀ
);

148 
BasicBlock
* 
bblock
 = BasicBlock::
	`Cª©e
(
c⁄ãxt
, "íåy", 
func
);

150 c⁄° * 
c⁄°VÆue
 = "%d\n";

151 
C⁄°™t
* 
f‹m©_c⁄°
 = 
C⁄°™tD©aAºay
::
	`gëSåög
(
c⁄ãxt
, 
c⁄°VÆue
);

153 
GlobÆV¨übÀ
* 
v¨
 = 
√w
 
	`GlobÆV¨übÀ
(*
moduÀ
, 
AºayTy≥
::
	`gë
(
I¡egîTy≥
::gë(
c⁄ãxt
,8), 
	`°æí
(
c⁄°VÆue
Ë+ 1), 
åue
, 
GlobÆVÆue
::
Priv©eLökage
, 
f‹m©_c⁄°
, ".str");

154 
C⁄°™t
* 
zîo
 = C⁄°™t::
	`gëNuŒVÆue
(
I¡egîTy≥
::
	`gëI¡32Ty
(
c⁄ãxt
));

155 
ve˘‹
<
C⁄°™t
*> 
ödi˚s
;

157 
ödi˚s
.
	`push_back
(
zîo
);

158 
ödi˚s
.
	`push_back
(
zîo
);

159 
C⁄°™t
* 
v¨_ªf
 = 
C⁄°™tEx¥
::
	`gëGëEÀmítPå
(
AºayTy≥
::
	`gë
(
I¡egîTy≥
::gë(
c⁄ãxt
, 8), 
	`°æí
(
c⁄°VÆue
Ë+ 1),
v¨
, 
ödi˚s
);

161 
ve˘‹
<
VÆue
*> 
¨gs
;

162 
¨gs
.
	`push_back
(
v¨_ªf
);

164 
Fun˘i⁄
::
¨g_ôî©‹
 
¨gsVÆues
 = 
func
->
	`¨g_begö
();

165 
VÆue
* 
toPröt
 = 
¨gsVÆues
++;

166 
toPröt
->
	`£tName
("toPrint");

167 
¨gs
.
	`push_back
(
toPröt
);

169 
CÆlIn°
::
	`Cª©e
(
¥ötFn
, 
¨gs
, "",
bblock
);

170 
Rëu∫In°
::
	`Cª©e
(
c⁄ãxt
, 
bblock
);

171  
func
;

172 
	}
}

174 
	gŒvm
::
Fun˘i⁄
* 
	$¸óãSˇnfFun˘i⁄
()

176 
°d
::
ve˘‹
<
Œvm
::
Ty≥
*> 
sˇnf_¨g_ty≥s
;

177 
sˇnf_¨g_ty≥s
.
	`push_back
(
Œvm
::
Ty≥
::
	`gëI¡8PåTy
(
	`gëGlobÆC⁄ãxt
()));

179 
Œvm
::
Fun˘i⁄Ty≥
* 
sˇnf_ty≥
 =

180 
Œvm
::
Fun˘i⁄Ty≥
::
	`gë
(

181 
Œvm
::
Ty≥
::
	`gëI¡32Ty
(
	`gëGlobÆC⁄ãxt
()), 
sˇnf_¨g_ty≥s
, 
åue
);

183 
Œvm
::
Fun˘i⁄
 *
func
 =Ülvm::Fun˘i⁄::
	`Cª©e
(

184 
sˇnf_ty≥
, 
Œvm
::
Fun˘i⁄
::
Exã∫ÆLökage
,

185 
Œvm
::
	`Twöe
("scanf"),

186 
moduÀ


188 
func
->
	`£tCÆlögC⁄v
(
Œvm
::
CÆlögC⁄v
::
C
);

189  
func
;

190 
	}
}

192 
Fun˘i⁄
* 
	$¸óãRódFun˘i⁄
(
Œvm
::
Fun˘i⁄
* 
sˇnfFn
)

194 
°d
::
ve˘‹
<
Œvm
::
Ty≥
*> 
ªad_¨g_ty≥s
;

195 
ªad_¨g_ty≥s
.
	`push_back
(
Œvm
::
Ty≥
::
	`gëI¡32PåTy
(
	`gëGlobÆC⁄ãxt
()));

198 
Œvm
::
Fun˘i⁄Ty≥
* 
ªad_ty≥
 =

199 
Œvm
::
Fun˘i⁄Ty≥
::
	`gë
(

200 
Œvm
::
Ty≥
::
	`gëVoidTy
(
	`gëGlobÆC⁄ãxt
()), 
ªad_¨g_ty≥s
, 
Ál£
);

202 
Œvm
::
Fun˘i⁄
 *
func
 =Ülvm::Fun˘i⁄::
	`Cª©e
(

203 
ªad_ty≥
, 
Œvm
::
Fun˘i⁄
::
I¡î«lLökage
,

204 
Œvm
::
	`Twöe
("read"),

205 
moduÀ


207 
Œvm
::
BasicBlock
 *
bblock
 =Ülvm::BasicBlock::
	`Cª©e
(
	`gëGlobÆC⁄ãxt
(), "íåy", 
func
, 0);

210 c⁄° *
c⁄°VÆue
 = "%d";

211 
Œvm
::
C⁄°™t
 *
f‹m©_c⁄°
 =Ülvm::
C⁄°™tD©aAºay
::
	`gëSåög
(
	`gëGlobÆC⁄ãxt
(), 
c⁄°VÆue
);

212 
Œvm
::
GlobÆV¨übÀ
 *
v¨
 =

213 
√w
 
Œvm
::
	`GlobÆV¨übÀ
(

214 *
moduÀ
, 
Œvm
::
AºayTy≥
::
	`gë
÷lvm::
I¡egîTy≥
::gë(
	`gëGlobÆC⁄ãxt
(), 8), 
	`°æí
(
c⁄°VÆue
)+1),

215 
åue
, 
Œvm
::
GlobÆVÆue
::
Priv©eLökage
, 
f‹m©_c⁄°
, ".str");

216 
Œvm
::
C⁄°™t
 *
zîo
 =

217 
Œvm
::
C⁄°™t
::
	`gëNuŒVÆue
÷lvm::
I¡egîTy≥
::
	`gëI¡32Ty
(
	`gëGlobÆC⁄ãxt
()));

219 
°d
::
ve˘‹
<
Œvm
::
C⁄°™t
*> 
ödi˚s
;

220 
ödi˚s
.
	`push_back
(
zîo
);

221 
ödi˚s
.
	`push_back
(
zîo
);

222 
Œvm
::
C⁄°™t
 *
v¨_ªf
 =

223 
Œvm
::
C⁄°™tEx¥
::
	`gëGëEÀmítPå
(
AºayTy≥
::
	`gë
(
I¡egîTy≥
::gë(
c⁄ãxt
, 8), 
	`°æí
(
c⁄°VÆue
Ë+1),
v¨
, 
ödi˚s
);

225 
°d
::
ve˘‹
<
VÆue
*> 
¨gs
;

226 
¨gs
.
	`push_back
(
v¨_ªf
);

227 
¨gs
.
	`push_back
(
func
->
	`¨g_begö
());

229 
CÆlIn°
::
	`Cª©e
(
sˇnfFn
, 
	`makeAºayRef
(
¨gs
), "", 
bblock
);

230 
Rëu∫In°
::
	`Cª©e
(
	`gëGlobÆC⁄ãxt
(), 
bblock
);

232  
func
;

233 
	}
}

235 
	gŒvm
::
VÆue
* 
	$code_PROGRAM
(
Node
* 
n
)

238  
	`code_EXTDEFS
(
n
->
chûd
);

240 
	}
}

242 
VÆue
* 
	$gë_LHS
(
Node
* 
n
)

244 
cout
<<"I'm i¿gë_LHS"<<
ídl
;

245 i‡(
n
->
chûd
->
√xt
 =
NULL
)

246  
nowEnv
[
	`°rög
(
n
->
chûd
->
c⁄ã¡
)];

249 
cout
<<"Hey I'm hîe, gëáºayÉÀmíàa†lsh"<<
ídl
;

250 
ve˘‹
<
VÆue
*> 
vecöd
;

251 i‡(
	`°rcmp
("ARRS", 
n
->
chûd
->
√xt
->
tokí
) == 0)

253 
°rög
 
«me
 = 
n
->
chûd
->
c⁄ã¡
;

254 
Node
* 
¨rs
 = 
n
->
chûd
->
√xt
;

264 
vecöd
.
	`push_back
(
C⁄°™tI¡
::
	`gë
(
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
),0));

265 
VÆue
* 
v
 = 
	`code_EXP
(
¨rs
->
chûd
->
√xt
);

266 
vecöd
.
	`push_back
(
v
);

267 
AºayRef
<
VÆue
*> 
	`öds
(
vecöd
);

268 
VÆue
* 
lﬂdö°
 = 
buûdî
.
	`Cª©eInBoundsGEP
(
nowEnv
[
«me
], 
öds
);

269 
lﬂdö°
->
	`¥öt
(
out
);

270  
lﬂdö°
;

273 
	}
}

275 
	gve˘‹
<
	gVÆue
*> 
	$code_ARGS
(
Node
* 
n
)

277 
ve˘‹
<
VÆue
*> 
ªt
;

278 
n
 =Ç->
chûd
;

279 i‡(
n
->
chûd
 =
NULL
)

280  
ªt
;

281 
åue
)

283 
VÆue
* 
tmp
 = 
	`code_EXP
(
n
);

284 
ªt
.
	`push_back
(
tmp
);

285 i‡(
n
->
√xt
 =
NULL
)

287 
n
 =Ç->
√xt
->√xt->
chûd
;

289  
ªt
;

290 
	}
}

292 
VÆue
* 
	$code_EXP
(
Node
* 
n
)

294 
°rög
 
chûdTokí
 = 
n
->
chûd
->
tokí
;

295 
cout
 << 
chûdTokí
<< 
ídl
;

296 i‡(
n
->
chûd
 =
NULL
)

297  
NULL
;

298 
cout
 << "I¿exp!!" << 
ídl
;

299 i‡(
chûdTokí
 == "INT")

301 
°rög
 
num
 = 
n
->
chûd
->
c⁄ã¡
;

302 
n
 = 
	`°oi
(
num
);

303 
cout
 << "I¿EXP INT ::" << 
n
 << 
ídl
;

304  
C⁄°™tI¡
::
	`gë
(
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
), 
n
);

306 i‡(
chûdTokí
 == "LP")

308  
	`code_EXP
(
n
->
chûd
->
√xt
);

310 i‡(
chûdTokí
 == "ID")

312 i‡(
n
->
chûd
->
√xt
 =
NULL
)

315 
VÆue
* 
v
 = 
nowEnv
[
	`°rög
(
n
->
chûd
->
c⁄ã¡
)];

316 
cout
 << "I¿ex∞ID::" << 
n
->
chûd
->
c⁄ã¡
 << 
ídl
;

317 i‡(
v
 !
NULL
)

319  
buûdî
.
	`Cª©eLﬂd
(
v
, 
n
->
chûd
->
c⁄ã¡
);

322 i‡(
	`°rcmp
("LP",
n
->
chûd
->
√xt
->
tokí
) == 0)

324 
°rög
 
funcName
 = 
n
->
chûd
->
c⁄ã¡
;

325 
Fun˘i⁄
* 
f
 = 
moduÀ
->
	`gëFun˘i⁄
(
funcName
);

326 i‡(
f
 == 0)

327 
	`îr‹Occur
("No such function");

328 
ve˘‹
<
VÆue
* > 
¨gs
 = 
	`code_ARGS
(
n
->
chûd
->
√xt
->next);

329 i‡(
funcName
 == "write")

330  
buûdî
.
	`Cª©eCÆl
(
f
,
¨gs
);

331 i‡(
funcName
 == "read")

333 
cout
<<"Ród vÆue:"<<
n
->
chûd
->
√xt
->√xt->chûd->
tokí
<<
ídl
;

334 
VÆue
* 
v
 = 
	`gë_LHS
(
n
->
chûd
->
√xt
->next->child);

335 
AºayRef
<
VÆue
*> 
	`¨g
(
v
);

336  
buûdî
.
	`Cª©eCÆl
(
f
, 
¨g
);

339  
buûdî
.
	`Cª©eCÆl
(
f
, 
¨gs
, "calltmp");

341 i‡(
	`°rcmp
("ARRS", 
n
->
chûd
->
√xt
->
tokí
) == 0)

343 
cout
<<"I'm ID Aºay::"<<
ídl
;

344 
ve˘‹
<
VÆue
*> 
vecödex
;

345 
Node
* 
¨rs
 = 
n
->
chûd
->
√xt
;

346 
vecödex
.
	`push_back
(
C⁄°™tI¡
::
	`gë
(
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
),0));

351 
Node
* 
e
 = 
¨rs
->
chûd
->
√xt
;

352 
VÆue
* 
v
 = 
	`code_EXP
(
e
);

355 
vecödex
.
	`push_back
(
v
);

358 
AºayRef
<
VÆue
*> 
	`öds
(
vecödex
);

361 
°rög
 
«me
 = 
n
->
chûd
->
c⁄ã¡
;

362 
cout
<<"AºayÇame::"<<
«me
<<
ídl
;

363 
VÆue
* 
±
 = 
nowEnv
[
«me
];

364 
±
->
	`¥öt
(
out
);

365 
VÆue
* 
ñïå

buûdî
.
	`Cª©eInBoundsGEP
(
±
, 
öds
);

369  
buûdî
.
	`Cª©eLﬂd
(
ñïå
);

372 i‡(
chûdTokí
 == "EXP")

375 
°rög
 
›
 = 
n
->
chûd
->
√xt
->
tokí
;

376 
cout
 << "I'm i¿EXP EXP!" << 
›
 << 
n
->
chûd
->
tokí
 <<Ç->chûd->
√xt
->√xt->tokí << 
ídl
;

377 i‡(
›
 == "PLUS")

378 { 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

379 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

380 
cout
 << "IN EXP EXP PULS::" << 
ídl
;

381 
VÆue
* 
ªt
 = 
buûdî
.
	`Cª©eAdd
(
LHS
, 
RHS
);

382  
ªt
;

384 i‡(
›
 == "MINUS")

386 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

387 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

388 
VÆue
* 
ªt
 = 
buûdî
.
	`Cª©eSub
(
LHS
, 
RHS
);

389  
ªt
;

391 i‡(
›
 == "TIMES")

393 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

394 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

395 
VÆue
* 
ªt
 = 
buûdî
.
	`Cª©eMul
(
LHS
, 
RHS
);

396  
ªt
;

398 i‡(
›
 == "DIV")

400 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

401 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

402 
VÆue
* 
ªt
 = 
buûdî
.
	`Cª©eSDiv
(
LHS
, 
RHS
);

403  
ªt
;

405 i‡(
›
 == "MOD")

407 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

408 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

409 
VÆue
* 
ªt
 = 
buûdî
.
	`Cª©eSRem
(
LHS
, 
RHS
);

410  
ªt
;

412 i‡(
›
 == "SHLEFT")

414 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

415 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

416 
VÆue
* 
ªt
 = 
buûdî
.
	`Cª©eShl
(
LHS
, 
RHS
);

417  
ªt
;

419 i‡(
›
 == "SHRIGHT")

421 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

422 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

423 
VÆue
* 
ªt
 = 
buûdî
.
	`Cª©eLShr
(
LHS
, 
RHS
);

424  
ªt
;

426 i‡(
›
 == "GT")

428 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

429 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

430 
VÆue
* 
ªt
 = 
buûdî
.
	`Cª©eICmpSGT
(
LHS
, 
RHS
);

431  
ªt
;

433 i‡(
›
 == "GEQ")

435 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

436 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

437 
VÆue
* 
ªt
 = 
buûdî
.
	`Cª©eICmpSGE
(
LHS
, 
RHS
);

438  
ªt
;

440 i‡(
›
 == "LT")

442 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

443 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

444 
VÆue
* 
ªt
 = 
buûdî
.
	`Cª©eICmpSLT
(
LHS
, 
RHS
);

445  
ªt
;

447 i‡(
›
 == "LEQ")

449 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

450 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

451 
VÆue
* 
ªt
 = 
buûdî
.
	`Cª©eICmpSLE
(
LHS
, 
RHS
);

452  
ªt
;

454 i‡(
›
 == "EQU")

456 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

457 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

458 
VÆue
* 
ªt
 = 
buûdî
.
	`Cª©eICmpEQ
(
LHS
, 
RHS
);

459  
ªt
;

461 i‡(
›
 == "NOTEQ")

463 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

464 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

465 
VÆue
* 
ªt
 = 
buûdî
.
	`Cª©eICmpNE
(
LHS
, 
RHS
);

466  
ªt
;

468 i‡(
›
 == "BITAND")

470 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

471 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

472 
VÆue
* 
ªt
 = 
buûdî
.
	`Cª©eAnd
(
LHS
, 
RHS
);

473  
ªt
;

475 i‡(
›
 == "BITXOR")

477 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

478 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

479  
buûdî
.
	`Cª©eX‹
(
LHS
, 
RHS
);

481 i‡(
›
 == "BITOR")

483 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

484 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

485  
buûdî
.
	`Cª©eOr
(
LHS
, 
RHS
);

487 i‡(
›
 == "LOGAND")

489 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

490 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

491  
buûdî
.
	`Cª©eAnd
(
LHS
, 
RHS
);

493 i‡(
›
 == "LOGOR")

495 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

496 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

497  
buûdî
.
	`Cª©eOr
(
LHS
, 
RHS
);

501 i‡(
›
 == "ASSIGNOP")

503 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

504 
VÆue
* 
LHS
 = 
	`gë_LHS
(
n
->
chûd
);

505  
buûdî
.
	`Cª©eSt‹e
(
RHS
, 
LHS
);

507 i‡(
›
 == "BANDAN")

509 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

510 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

511 
VÆue
* 
tv
 = 
buûdî
.
	`Cª©eAnd
(
LHS
, 
RHS
);

512 
VÆue
* 
l
 = 
	`gë_LHS
(
n
->
chûd
);

513  
buûdî
.
	`Cª©eSt‹e
(
tv
, 
l
);

515 i‡(
›
 == "BXORAN")

517 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

518 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

519 
VÆue
* 
tv
 = 
buûdî
.
	`Cª©eX‹
(
LHS
, 
RHS
);

520 
VÆue
* 
l
 = 
	`gë_LHS
(
n
->
chûd
);

521  
buûdî
.
	`Cª©eSt‹e
(
tv
, 
l
);

523 i‡(
›
 == "BORAN")

525 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

526 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

527 
VÆue
* 
tv
 = 
buûdî
.
	`Cª©eOr
(
LHS
, 
RHS
);

528 
VÆue
* 
l
 = 
	`gë_LHS
(
n
->
chûd
);

529  
buûdî
.
	`Cª©eSt‹e
(
tv
, 
l
);

531 i‡(
›
 == "SHLEFTAN")

533 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

534 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

535 
VÆue
* 
tv
 = 
buûdî
.
	`Cª©eShl
(
LHS
, 
RHS
);

536 
VÆue
* 
l
 = 
	`gë_LHS
(
n
->
chûd
);

537  
buûdî
.
	`Cª©eSt‹e
(
tv
, 
l
);

539 i‡(
›
 == "SHRIGHTAN")

541 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

542 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

543 
VÆue
* 
tv
 = 
buûdî
.
	`Cª©eLShr
(
LHS
, 
RHS
);

544 
VÆue
* 
l
 = 
	`gë_LHS
(
n
->
chûd
);

545  
buûdî
.
	`Cª©eSt‹e
(
tv
, 
l
);

547 i‡(
›
 == "PLUSAN")

549 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

550 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

551 
cout
 << "I¿PLUSAN!!" << 
ídl
;

552 
VÆue
* 
tv
 = 
buûdî
.
	`Cª©eAdd
(
LHS
, 
RHS
);

553 
VÆue
* 
l
 = 
	`gë_LHS
(
n
->
chûd
);

554  
buûdî
.
	`Cª©eSt‹e
(
tv
, 
l
);

556 i‡(
›
 == "MINUSAN")

558 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

559 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

560 
VÆue
* 
tv
 = 
buûdî
.
	`Cª©eSub
(
LHS
, 
RHS
);

561 
VÆue
* 
l
 = 
	`gë_LHS
(
n
->
chûd
);

562  
buûdî
.
	`Cª©eSt‹e
(
tv
, 
l
);

564 i‡(
›
 == "TIMESAN")

566 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

567 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

568 
VÆue
* 
tv
 = 
buûdî
.
	`Cª©eMul
(
LHS
, 
RHS
);

569 
VÆue
* 
l
 = 
	`gë_LHS
(
n
->
chûd
);

570  
buûdî
.
	`Cª©eSt‹e
(
tv
, 
l
);

572 i‡(
›
 == "DIVAN")

574 
VÆue
* 
LHS
 = 
	`code_EXP
(
n
->
chûd
);

575 
VÆue
* 
RHS
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

576 
VÆue
* 
tv
 = 
buûdî
.
	`Cª©eSDiv
(
LHS
, 
RHS
);

577 
VÆue
* 
l
 = 
	`gë_LHS
(
n
->
chûd
);

578  
buûdî
.
	`Cª©eSt‹e
(
tv
, 
l
);

582 i‡(
chûdTokí
 == "MINUS")

585 
VÆue
* 
v
 = 
	`code_EXP
(
n
->
chûd
->
√xt
);

586 
VÆue
* 
l
 = 
	`gë_LHS
(
n
->
chûd
->
√xt
);

587 
VÆue
* 
t
 = 
buûdî
.
	`Cª©eSub
–
C⁄°™tI¡
::
	`gëSig√d
(
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
), 0),
v
);

588  
buûdî
.
	`Cª©eSt‹e
(
t
, 
l
);

590 i‡(
chûdTokí
 == "INCR")

592 
VÆue
* 
v
 = 
	`code_EXP
(
n
->
chûd
->
√xt
);

593 
VÆue
* 
l
 = 
	`gë_LHS
(
n
->
chûd
->
√xt
);

594 
VÆue
* 
t
 = 
buûdî
.
	`Cª©eAdd
(
C⁄°™tI¡
::
	`gëSig√d
(
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
), 1), 
v
);

595  
buûdî
.
	`Cª©eSt‹e
(
t
, 
l
);

597 i‡(
chûdTokí
 == "DECR")

599 
VÆue
* 
v
 = 
	`code_EXP
(
n
->
chûd
->
√xt
);

600 
VÆue
* 
l
 = 
	`gë_LHS
(
n
->
chûd
->
√xt
);

601 
VÆue
* 
t
 = 
buûdî
.
	`Cª©eSub
(
v
, 
C⁄°™tI¡
::
	`gëSig√d
(
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
), 1));

602  
buûdî
.
	`Cª©eSt‹e
(
t
, 
l
);

604 i‡(
chûdTokí
 == "BITNOT")

606 
VÆue
* 
v
 = 
	`code_EXP
(
n
->
chûd
->
√xt
);

607 
VÆue
* 
l
 = 
	`gë_LHS
(
n
->
chûd
->
√xt
);

608 
VÆue
* 
t
 = 
buûdî
.
	`Cª©eX‹
(
v
, 
C⁄°™tI¡
::
	`gëSig√d
(
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
), -1));

609  
buûdî
.
	`Cª©eSt‹e
(
t
, 
l
);

611 i‡(
chûdTokí
 == "LOGNOT")

613 
cout
<<"Yï I'm i¿LOGNOT!!"<<
ídl
;

614 
VÆue
* 
v
 = 
	`code_EXP
(
n
->
chûd
->
√xt
);

615 
VÆue
* 
l
 = 
	`gë_LHS
(
n
->
chûd
->
√xt
);

616  
buûdî
.
	`Cª©eICmpEQ
(
v
, 
C⁄°™tI¡
::
	`gëSig√d
(
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
),0));

621  
NULL
;

622 
	}
}

624 
	gŒvm
::
VÆue
* 
	$code_EXTDEFS
(
Node
* 
n
)

626 i‡(
n
->
chûd
 =
NULL
)

627  
NULL
;

628 
Node
* 
c
 = 
n
->
chûd
;

629 
VÆue
* 
ext
 = 
	`code_EXTDEF
(
c
);

630 
VÆue
* 
exts
 = 
	`code_EXTDEFS
(
c
->
√xt
);

631  
NULL
;

632 
	}
}

634 
£t_Func_Env
(
Fun˘i⁄
* 
f
, 
ve˘‹
<
°rög
> 
¨gsName
, ve˘‹<
Ty≥
*> 
¨gsTy≥
 , såög 
«me
)

636 
BasicBlock
 *
	gBB
 = BasicBlock::
Cª©e
(
c⁄ãxt
, "íåy", 
f
);

637 
	gbuûdî
.
SëIn£πPoöt
(
BB
);

638 
	gi
 = 0;

642 
	gnowEnv
 = 
globÆEnv
;

644 
	gFun˘i⁄
::
¨g_ôî©‹
 
AI
 = 
f
->
¨g_begö
(); 
	gi
!
¨gsTy≥
.
size
(); ++
	gAI
,++i)

646 
	gAI
->
¥öt
(
out
);

647 
AŒoˇIn°
* 
	gÆloˇ
 = 
buûdî
.
Cª©eAŒoˇ
(
¨gsTy≥
[
i
], 0, 
¨gsName
[i].
c_°r
());

648 
	gÆloˇ
->
¥öt
(
out
);

649 
	gAI
->
£tName
(
¨gsName
[
i
].
c_°r
());

650 
	gbuûdî
.
Cª©eSt‹e
(
AI
, 
Æloˇ
);

652 
	gnowEnv
[
¨gsName
[
i
]] = 
Æloˇ
;

658 
	gŒvm
::
VÆue
* 
	$code_EXTDEF
(
Node
* 
n
)

660 
Node
* 
¢d
 = 
n
->
chûd
->
√xt
;

661 
°rög
 
¢dC⁄ã¡
 = 
¢d
->
tokí
;

662 i‡(
¢dC⁄ã¡
 == "FUNC")

664 
Ty≥
* 
ªtTy≥
 = 
	`code_SPEC
(
n
->
chûd
);

665 
°rög
 
funcName
 = 
	`code_FUN_Name
(
n
->
chûd
->
√xt
);

666 
°d
::
ve˘‹
<
Ty≥
*> 
¨gsTy≥
 = 
	`code_FUNC_ARG_Ty≥
(
n
->
chûd
->
√xt
);

667 auto& 
i
 : 
¨gsTy≥
)

672 
°d
::
ve˘‹
<
°rög
> 
¨gsName
 = 
	`code_FUNC_ARG_Name
(
n
->
chûd
->
√xt
);

673 
Fun˘i⁄Ty≥
* 
funcTy≥
 = Fun˘i⁄Ty≥::
	`gë
(
ªtTy≥
, 
¨gsTy≥
, 
Ál£
);

675 
Fun˘i⁄
* 
f
 = Fun˘i⁄::
	`Cª©e
(
funcTy≥
, Fun˘i⁄::
Exã∫ÆLökage
, 
funcName
.
	`c_°r
(), 
moduÀ
);

676 
idx
 = 0;

677 
cout
 << "Fun˘i⁄ Def::"<<
¨gsName
.
	`size
()<<"ánd "<<
¨gsTy≥
.size();

678 
cout
 << 
f
->
	`¨g_size
(Ë<< 
ídl
;

679 autÿ
AI
 = 
f
->
	`¨g_begö
(); 
idx
 !
¨gsName
.
	`size
();++AI, ++idx)

685 
	`£t_Func_Env
(
f
, 
¨gsName
, 
¨gsTy≥
, 
funcName
);

687 
fEnv
[
funcName
] = 
f
;

688 
	`code_STMTBLOCK
(
n
->
chûd
->
√xt
->√xt, 
f
);

691 i‡(
¢dC⁄ã¡
 == "EXTVARS")

693 
Ty≥
* 
v¨Ty≥
 = 
	`code_SPEC
(
n
->
chûd
);

694 
	`code_EXTVARS
(
n
->
chûd
->
√xt
, 
v¨Ty≥
);

696  
NULL
;

697 
	}
}

699 
	gŒvm
::
Ty≥
* 
	$code_SPEC
(
Node
* 
n
)

701 
°rög
 
chi
 = 
n
->
chûd
->
tokí
;

702 i‡(
chi
 == "TYPE")

704  
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
);

706 
	}
}

708 
°rög
 
	$code_FUN_Name
(
Node
* 
n
)

710  
	`°rög
(
n
->
chûd
->
c⁄ã¡
);

711 
	}
}

713 
	gve˘‹
<
	gTy≥
*> 
	$code_FUNC_ARG_Ty≥
(
Node
* 
n
)

715  
	`code_PARAS_Ty≥
(
n
->
chûd
->
√xt
->next);

716 
	}
}

718 
	gve˘‹
<
	gTy≥
*> 
	$code_PARAS_Ty≥
(
Node
* 
n
)

720 
ve˘‹
<
Ty≥
*> 
ªt
;

721 i‡(
n
->
chûd
 =
NULL
)

722  
ªt
;

724 
åue
)

726 
Node
* 
∑ø
 = 
n
->
chûd
;

727 
Ty≥
* 
t
 = 
	`code_SPEC
(
∑ø
->
chûd
);

728 
ªt
.
	`push_back
(
t
);

729 i‡(
∑ø
->
√xt
 =
NULL
)

731 
n
 = 
∑ø
->
√xt
->next;

733  
ªt
;

734 
	}
}

736 
	gve˘‹
<
	g°rög
> 
	$code_FUNC_ARG_Name
(
Node
* 
n
)

738  
	`code_PARA_ARG_Name
(
n
->
chûd
->
√xt
->next);

739 
	}
}

741 
	gve˘‹
<
	g°rög
> 
	$code_PARA_ARG_Name
(
Node
* 
n
)

743 
ve˘‹
<
°rög
> 
ªt
;

744 i‡(
n
->
chûd
=
NULL
)

745  
ªt
;

746 
åue
)

748 
Node
* 
∑ø
 = 
n
->
chûd
;

749 
°rög
 
t
 = 
∑ø
->
chûd
->
√xt
->chûd->
c⁄ã¡
;

750 
cout
 << 
t
 << 
ídl
;

751 
ªt
.
	`push_back
(
t
);

752 i‡(
∑ø
->
√xt
 =
NULL
)

754 
n
 = 
∑ø
->
√xt
->next;

756  
ªt
;

757 
	}
}

759 
Ty≥
* 
	$code_VAR_ARRAY_TYPE
(
Node
* 
n
)

761 
°rög
 
tokí
 = 
n
->
chûd
->token;

762 i‡(
tokí
 == "ID")

763  
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
);

764 i‡(
n
->
chûd
->
√xt
 =
NULL
)

765  
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
);

766 
num
 = 
	`©oi
(
n
->
chûd
->
√xt
->√xt->
c⁄ã¡
);

767 
cout
<<"I¿v¨_¨øy_ty≥::"<<
num
<<
ídl
;

768 
Ty≥
* 
ñeTy≥
 = 
	`code_VAR_ARRAY_TYPE
(
n
->
chûd
);

769  
AºayTy≥
::
	`gë
(
ñeTy≥
, 
num
);

772 
	}
}

774 
°rög
 
	$gë_VAR_Name
(
Node
* 
n
)

776 
°rög
 
chûdTokí
 = 
n
->
chûd
->
tokí
;

777 
n
 =Ç->
chûd
;

778 
chûdTokí
 != "ID")

780 
chûdTokí
 = 
n
->
chûd
->
tokí
;

781 
n
 =Ç->
chûd
;

783  
n
->
c⁄ã¡
;

784 
	}
}

786 
	gve˘‹
<> 
	$gë_INIT
(
Node
* 
n
, 
Àn
)

788 
ve˘‹
<> 
ªt
;

789 i‡(
n
->
chûd
->
√xt
 =
NULL
)

791 
	`îr‹Occur
("Array must initilized wtih LC");

793 
Node
* 
¨gs
 = 
n
->
chûd
->
√xt
;

794 
åue
)

796 
v
 = 
	`©oi
(
¨gs
->
chûd
->chûd->
c⁄ã¡
);

797 
ªt
.
	`push_back
(
v
);

798 i‡(
¨gs
->
chûd
->
√xt
 =
NULL
)

802 
¨gs
 =árgs->
chûd
->
√xt
->next;

805 i‡(
ªt
.
	`size
(Ë=1 && 
Àn
 != 1)

807 
v
 = 
ªt
.
	`‰⁄t
();

808 
i
 = 0; i < 
Àn
 - 1; ++i)

809 
ªt
.
	`push_back
(
v
);

811  
ªt
;

813 
	}
}

815 
	$code_DEC_GLO
(
Node
* 
n
, 
Ty≥
* 
t
)

817 i‡(
n
->
chûd
->chûd->
√xt
 =
NULL
)

819 
°rög
 
«me
 = 
n
->
chûd
->chûd->
c⁄ã¡
;

820 i‡(
n
->
chûd
->
√xt
 =
NULL
)

822 
API¡
 
	`i
(32,0 ,
åue
);

823 
C⁄°™t
* 
c
 = C⁄°™t::
	`gëI¡egîVÆue
(
t
, 
i
);

824 
VÆue
* 
v
 = 
√w
 
	`GlobÆV¨übÀ
(*
moduÀ
, 
t
, 
Ál£
, 
GlobÆVÆue
::
Exã∫ÆLökage
, 
c
, 
«me
);

825 
globÆEnv
[
«me
] = 
v
;

829 
cout
 << "I'm i¿globÆ de‡wôh inô" << 
ídl
;

830 
°rög
 
öôTokí
 = 
n
->
chûd
->
√xt
->√xt->chûd->
tokí
;

831 i‡(
öôTokí
 == "EXP")

833 
öô
 = 
	`©oi
(
n
->
chûd
->
√xt
->√xt->chûd->chûd->
c⁄ã¡
);

834 
cout
 << "I¿globÆ inô::" << 
öô
 << 
ídl
;

835 
API¡
 
	`i
(32, 
öô
, 
åue
);

836 
C⁄°™t
* 
c
 = C⁄°™t::
	`gëI¡egîVÆue
(
t
, 
i
);

837 
c
->
	`¥öt
(
out
);

838 
VÆue
* 
v
 = 
√w
 
	`GlobÆV¨übÀ
(*
moduÀ
, 
t
, 
Ál£
, 
GlobÆVÆue
::
Exã∫ÆLökage
, 
c
, 
«me
);

839 
globÆEnv
[
«me
] = 
v
;

845 i‡(
n
->
chûd
->
√xt
 =
NULL
)

847 
cout
 << "I w™àtÿde˛¨ê®globÆáºay!" << 
ídl
;

848 
Ty≥
* 
t
 = 
	`code_VAR_ARRAY_TYPE
(
n
->
chûd
);

849 
t
->
	`¥öt
(
out
);

850 
°rög
 
«me
 = 
	`gë_VAR_Name
(
n
);

851 
Àn
 = 
	`©oi
(
n
->
chûd
->chûd->
√xt
->√xt->
c⁄ã¡
);

852 
ve˘‹
<
C⁄°™t
*> 
cv
;

853 
i
 = 0; i < 
Àn
; i++)

855 
API¡
 
	`öô
(32,0,
åue
);

856 
C⁄°™t
* 
c
 = C⁄°™t::
	`gëI¡egîVÆue
(
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
), 
öô
);

857 
cv
.
	`push_back
(
c
);

859 
AºayRef
<
C⁄°™t
*> 
	`¨
(
cv
);

860 
C⁄°™t
* 
c⁄¨r
 = 
C⁄°™tAºay
::
	`gë
(
ˇ°
<
AºayTy≥
>(
t
), 
¨
);

861 
VÆue
* 
v
 = 
√w
 
	`GlobÆV¨übÀ
(*
moduÀ
, 
t
, 
Ál£
, 
GlobÆVÆue
::
Exã∫ÆLökage
, 
c⁄¨r
, 
«me
);

862 
globÆEnv
[
«me
] = 
v
;

866 
cout
<<"I w™àtÿde˛¨ê®globÆáºay wôh inô!"<<
ídl
;

867 
Ty≥
* 
t
 = 
	`code_VAR_ARRAY_TYPE
(
n
->
chûd
);

868 
°rög
 
«me
 = 
	`gë_VAR_Name
(
n
);

869 
Àn
 = 
	`©oi
(
n
->
chûd
->chûd->
√xt
->√xt->
c⁄ã¡
);

870 
ve˘‹
<> 
öôülvÆue
 = 
	`gë_INIT
(
n
->
chûd
->
√xt
->√xt, 
Àn
);

871 
ve˘‹
<
C⁄°™t
*> 
cv
;

872 autÿ
i
 : 
öôülvÆue
)

874 
API¡
 
	`öô
(32, 
i
, 
åue
);

875 
C⁄°™t
* 
c
 = C⁄°™t::
	`gëI¡egîVÆue
(
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
), 
öô
);

876 
cv
.
	`push_back
(
c
);

878 
AºayRef
<
C⁄°™t
*> 
	`¨
(
cv
);

879 
C⁄°™t
* 
c⁄¨r
 = 
C⁄°™tAºay
::
	`gë
(
ˇ°
<
AºayTy≥
>(
t
), 
¨
);

880 
c⁄¨r
->
	`¥öt
(
out
);

881 
VÆue
* 
v
 = 
√w
 
	`GlobÆV¨übÀ
(*
moduÀ
, 
t
, 
Ál£
, 
GlobÆVÆue
::
Exã∫ÆLökage
, 
c⁄¨r
, 
«me
);

882 
globÆEnv
[
«me
] = 
v
;

886 
	}
}

888 
	$code_EXTVARS
(
Node
* 
n
,
Ty≥
* 
t
)

890 i‡(
n
 =
NULL
)

894 
n
 =Ç->
chûd
;

896 
åue
)

898 
	`code_DEC_GLO
(
n
,
t
);

899 i‡(
n
->
√xt
 =
NULL
)

901 
n
 =Ç->
√xt
->√xt->
chûd
;

903 
	}
}

905 
	$code_DEFS_INNER
(
Node
* 
n
, 
Fun˘i⁄
* 
f
)

907 i‡(
n
->
chûd
 =
NULL
)

910 
n
 =Ç->
chûd
;

911 
n
 !
NULL
)

913 
	`code_DEF_INNER
(
n
, 
f
);

914 
n
 =Ç->
√xt
->
chûd
;

917 
	}
}

919 
	$code_DEF_INNER
(
Node
* 
n
, 
Fun˘i⁄
* 
f
)

922 
Ty≥
* 
t
 = 
	`code_SPEC
(
n
->
chûd
);

923 
	`code_DECS_INNER
(
n
->
chûd
->
√xt
, 
f
, 
t
);

924 
	}
}

926 
	$code_DECS_INNER
(
Node
* 
n
, 
Fun˘i⁄
* 
f
, 
Ty≥
* 
t
)

929 
n
 =Ç->
chûd
;

930 
n
 !
NULL
)

932 
	`code_DEC_INNER
(
n
, 
f
, 
t
);

933 i‡(
n
->
√xt
 !
NULL
)

934 
n
 =Ç->
√xt
->√xt->
chûd
;

938 
	}
}

941 
	$code_DEC_INNER
(
Node
* 
n
, 
Fun˘i⁄
* 
f
, 
Ty≥
* 
t
)

943 
°rög
 
«me
 = 
n
->
chûd
->chûd->
c⁄ã¡
;

944 
cout
 << 
n
->
chûd
->
tokí
 << " " <<Ç->chûd->chûd->
c⁄ã¡
<<
ídl
;

945 
AŒoˇIn°
* 
ö°
 = 
buûdî
.
	`Cª©eAŒoˇ
(
t
,
NULL
,
n
->
chûd
->chûd->
c⁄ã¡
);

947 
nowEnv
[
	`°rög
(
n
->
chûd
->chûd->
c⁄ã¡
)] = 
ö°
;

948 i‡(
nowEnv
[
	`°rög
(
n
->
chûd
->chûd->
c⁄ã¡
)])

949 
cout
 << "In£π suc˚suŒy"<<
n
->
chûd
->chûd->
c⁄ã¡
;

953 i‡(
n
->
chûd
->
√xt
 =
NULL
)

959 
Node
* 
öô
 = 
n
->
chûd
->
√xt
->next;

960 i‡(
	`°rcmp
("EXP", 
öô
->
chûd
->
tokí
))

962 
cout
 << 
n
->
chûd
->
√xt
->√xt->
tokí
 << 
ídl
;

963 
VÆue
* 
v
 = 
	`code_INIT
(
n
->
chûd
->
√xt
->next);

964 
buûdî
.
	`Cª©eSt‹e
(
v
, 
ö°
);

968 
num
 = 
	`©oi
(
n
->
chûd
->chûd->
√xt
->√xt->
c⁄ã¡
);

969 
ve˘‹
<> 
vc
 = 
	`gë_INIT
(
n
->
chûd
->
√xt
->√xt,
num
);

970 auto& 
i
: 
vc
)

972 
API¡
 
	`tmp
(32,
i
);

973 
C⁄°™t
* 
a
 = C⁄°™t::
	`gëI¡egîVÆue
(
Ty≥
::
	`gëI¡32Ty
(
c⁄ãxt
), 
tmp
);

974 
buûdî
.
	`Cª©eSt‹e
(
a
, 
ö°
);

975 
ö°
 = 
buûdî
.
	`Cª©eGEP
(inst,);

979 
	}
}

981 
VÆue
* 
	$code_INIT
(
Node
* 
n
)

983 
°rög
 
tokí
 = 
n
->
chûd
->token;

984 
cout
 << "INIT::" << 
n
->
chûd
->
tokí
 << 
ídl
;

985 i‡(
tokí
 == "EXP")

987  
	`code_EXP
(
n
->
chûd
);

989  
NULL
;

990 
	}
}

992 
	$code_STMTBLOCK
(
Node
* 
n
, 
Fun˘i⁄
* 
f
)

994 
	`code_DEFS_INNER
(
n
->
chûd
->
√xt
, 
f
);

995 
	`code_STMTS
(
n
->
chûd
->
√xt
->√xt,
f
);

996 
	}
}

998 
	$code_STMTS
(
Node
* 
n
, 
Fun˘i⁄
* 
f
)

1000 i‡(
n
->
chûd
 =
NULL
)

1002 
	`code_STMT
(
n
->
chûd
,
f
);

1003 
	`code_STMTS
(
n
->
chûd
->
√xt
,
f
 );

1004 
	}
}

1006 
	$code_STMT
(
Node
* 
n
,
Fun˘i⁄
* 
f
)

1008 
°rög
 
tmp_tokí
 = 
n
->
chûd
->
tokí
;

1009 
cout
 << 
tmp_tokí
 << 
ídl
;

1010 i‡(
tmp_tokí
 == "STMTBLOCK")

1012 
	`code_STMTBLOCK
(
n
->
chûd
, 
f
);

1014 i‡(
tmp_tokí
 == "RETURN")

1016 
VÆue
* 
ªt
 = 
	`code_EXP
(
n
->
chûd
->
√xt
);

1017 
buûdî
.
	`Cª©eRë
(
ªt
);

1018 
ñ£Fœg
 = 
Ál£
;

1019 
thíFœg
 = 
Ál£
;

1021 i‡(
tmp_tokí
 == "EXP")

1023 
cout
 << "I'm i¿STMT EXP!!" << 
ídl
;

1024 
VÆue
* 
v
 = 
	`code_EXP
(
n
->
chûd
);

1026 i‡(
tmp_tokí
 == "IF")

1028 
boﬁ
 
ãmpThí
 = 
thíFœg
;

1029 
boﬁ
 
ãmpEl£
 = 
ñ£Fœg
;

1030 
thíFœg
 = 
åue
;

1031 
ñ£Fœg
 = 
åue
;

1032 
VÆue
* 
c⁄dV
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

1033 
Fun˘i⁄
* 
f
 = 
buûdî
.
	`GëIn£πBlock
()->
	`gëP¨ít
();

1034 
BasicBlock
 *
thíBB
 = BasicBlock::
	`Cª©e
(
c⁄ãxt
, "thí", 
f
);

1035 
BasicBlock
 *
ñ£BB
 = BasicBlock::
	`Cª©e
(
c⁄ãxt
, "else");

1036 
BasicBlock
 *
mîgeBB
 = BasicBlock::
	`Cª©e
(
c⁄ãxt
, "ifcont");

1037 
bªakBlock
 = 
mîgeBB
;

1038 
buûdî
.
	`Cª©eC⁄dBr
(
c⁄dV
, 
thíBB
, 
ñ£BB
);

1039 
boﬁ
 
Êag
 = (
n
->
chûd
->
√xt
->√xt->√xt->√xt->√xt->chûd !
NULL
);

1040 
buûdî
.
	`SëIn£πPoöt
(
thíBB
);

1041 
	`code_STMT
(
n
->
chûd
->
√xt
->√xt->√xt->√xt, 
f
);

1042 
boﬁ
 
mîgeFœg
 = 
Ál£
;

1043 i‡(
thíFœg
)

1045 
buûdî
.
	`Cª©eBr
(
mîgeBB
);

1046 
mîgeFœg
 = 
åue
;

1048 
thíBB
 = 
buûdî
.
	`GëIn£πBlock
();

1049 
f
->
	`gëBasicBlockLi°
().
	`push_back
(
ñ£BB
);

1050 
buûdî
.
	`SëIn£πPoöt
(
ñ£BB
);

1051 i‡(
Êag
)

1053 
Node
* 
e°mt
 = 
n
->
chûd
->
√xt
->next->next->next->next->child->next;

1054 
	`code_STMT
(
e°mt
,
f
 );

1056 if(
ñ£Fœg
)

1058 
buûdî
.
	`Cª©eBr
(
mîgeBB
);

1059 
mîgeFœg
 = 
åue
;

1061 
ñ£BB
 = 
buûdî
.
	`GëIn£πBlock
();

1062 i‡(
ñ£Fœg
 || 
thíFœg
)

1064 
f
->
	`gëBasicBlockLi°
().
	`push_back
(
mîgeBB
);

1065 
buûdî
.
	`SëIn£πPoöt
(
mîgeBB
);

1067 
thíFœg
 = 
ãmpThí
;

1068 
ñ£Fœg
 = 
ãmpEl£
;

1070 i‡(
tmp_tokí
 == "FOR")

1072 
Node
* 
c⁄d
 = 
n
->
chûd
->
√xt
->next->next->next;

1073 
VÆue
* 
exp1
 = 
	`code_EXP
(
n
->
chûd
->
√xt
->next);

1074 
BasicBlock
* 
c⁄dBB
 = BasicBlock::
	`Cª©e
(
c⁄ãxt
, "C⁄d", 
f
);

1075 
buûdî
.
	`Cª©eBr
(
c⁄dBB
);

1076 
buûdî
.
	`SëIn£πPoöt
(
c⁄dBB
);

1077 
VÆue
* 
c⁄dV
 = 
	`code_EXP
(
c⁄d
);

1080 
BasicBlock
* 
lo›BB
 = BasicBlock::
	`Cª©e
(
c⁄ãxt
, "lo›", 
f
);

1081 
BasicBlock
* 
°ïBB
 = BasicBlock::
	`Cª©e
(
c⁄ãxt
, "step");

1082 
c⁄tBlock
 = 
°ïBB
;

1083 
BasicBlock
* 
outLo›BB
 = BasicBlock::
	`Cª©e
(
c⁄ãxt
, "outloop");

1084 
bªakBlock
 = 
outLo›BB
;

1087 
buûdî
.
	`Cª©eC⁄dBr
(
c⁄dV
, 
lo›BB
, 
outLo›BB
);

1088 
Node
* 
body
 = 
n
->
chûd
->
√xt
->next->next->next->next->next->next->next;

1089 
buûdî
.
	`SëIn£πPoöt
(
lo›BB
);

1090 
	`code_STMT
(
body
,
f
 );

1091 
buûdî
.
	`Cª©eBr
(
°ïBB
);

1092 
buûdî
.
	`SëIn£πPoöt
(
°ïBB
);

1093 
Node
* 
°ï
 = 
n
->
chûd
->
√xt
->next->next->next->next->next;

1094 
VÆue
* 
°ïVÆue
 = 
	`code_EXP
(
°ï
);

1095 
buûdî
.
	`Cª©eBr
(
c⁄dBB
);

1096 
f
->
	`gëBasicBlockLi°
().
	`push_back
(
°ïBB
);

1097 
f
->
	`gëBasicBlockLi°
().
	`push_back
(
outLo›BB
);

1098 
buûdî
.
	`SëIn£πPoöt
(
outLo›BB
);

1099 
	`vîifyFun˘i⁄
(*
f
);

1101 i‡(
tmp_tokí
 == "CONT")

1103 i‡(
c⁄tBlock
 !
NULL
)

1105 
buûdî
.
	`Cª©eBr
(
c⁄tBlock
);

1108 i‡(
tmp_tokí
 == "BREAK")

1110 i‡(
bªakBlock
 !
NULL
)

1112 
buûdî
.
	`Cª©eBr
(
bªakBlock
);

1115 
	}
}

1119 
	$maö
(
¨gc
, * 
¨gv
[])

1121 
Node
* 
hód
;

1122 
fout
.
	`›í
("out.ll");

1123 i‡(
¨gc
 == 2)

1125 
hód
 = 
	`∑r£
(
¨gv
[1]);

1127 
	`wÆkThrough
(
hód
, 1);

1128 
°d
::
cout
<<"Hhahaha";

1130 
unique_±r
<
ModuÀ
> 
Ow√r
 = 
make_unique
<ModuÀ>("Sim∂êC", 
c⁄ãxt
);

1131 
moduÀ
 = 
Ow√r
.
	`gë
();

1137 
Fun˘i⁄
* 
¥ötfFunc
 = 
	`¸óãPrötfFun˘i⁄
();

1138 
Fun˘i⁄
* 
wrôeFunc
 = 
	`¸óãWrôeFun˘i⁄
(
¥ötfFunc
);

1139 
Fun˘i⁄
* 
sˇnfFunc
 = 
	`¸óãSˇnfFun˘i⁄
();

1140 
Fun˘i⁄
* 
ªadFunc
 = 
	`¸óãRódFun˘i⁄
(
sˇnfFunc
);

1141 
îr‹_code
 
îr
;

1142 
øw_fd_o°ªam
 
	`f
("out.Œ", 
îr
,
sys
::
fs
::
O≥nFœgs
::
F_RW
);

1144 
	`code_PROGRAM
(
hód
);

1157 
moduÀ
->
	`dump
();

1158 
moduÀ
->
	`¥öt
(
f
,
NULL
);

1159 
	}
}

	@smallc.l

2 
	~"d©a°ru˘.h
"

3 
	~"smÆlc.èb.h
"

5 
	~<°dio.h
>

6 
	~<°rög.h
>

9 
	glöecou¡
 = 1;

10 
Node
* 
¸óãNode
(*, *);

13 [0-9]+|0x[0-9A-
F
]+

14 
id
 [
_a
-
zA
-
Z
][_a-zA-
Z0
-9]*

16 %% /* 
	$yyÀx
 */

18 
	`¥ötf
("DOT\n");

19 
yylvÆ
.
node
 = 
	`¸óãNode
("DOT",
yyãxt
);

20  
DOT
;

25 
	`¥ötf
("NOTEQ\n");

26 
yylvÆ
.
node
 = 
	`¸óãNode
("NOTEQ",
yyãxt
);

27  
NOTEQ
;

31 
	`¥ötf
("EQU\n");

32 
yylvÆ
.
node
 = 
	`¸óãNode
("EQU",
yyãxt
);

33  
EQU
;

37 
	`¥ötf
("SHLEFTAN\n");

38 
yylvÆ
.
node
 = 
	`¸óãNode
("SHLEFTAN",
yyãxt
);

39  
SHLEFTAN
;

43 
	`¥ötf
("SHRIGHTAN\n");

44 
yylvÆ
.
node
 = 
	`¸óãNode
("SHRIGHTAN",
yyãxt
);

45  
SHRIGHTAN
;

49 
	`¥ötf
("SHLEFT\n");

50 
yylvÆ
.
node
 = 
	`¸óãNode
("SHLEFT",
yyãxt
);

51  
SHLEFT
;

55 
	`¥ötf
("SHRIGHT\n");

56 
yylvÆ
.
node
 = 
	`¸óãNode
("SHRIGHT",
yyãxt
);

57  
SHRIGHT
;

61 
	`¥ötf
("INCR\n");

62 
yylvÆ
.
node
 = 
	`¸óãNode
("INCR",
yyãxt
);

63  
INCR
;

67 
	`¥ötf
("DECR\n");

68 
yylvÆ
.
node
 = 
	`¸óãNode
("DECR",
yyãxt
);

69  
DECR
;

73 
	`¥ötf
("BANDAN\n");

74 
yylvÆ
.
node
 = 
	`¸óãNode
("BANDAN",
yyãxt
);

75  
BANDAN
;

79 
	`¥ötf
("BXORAN\n");

80 
yylvÆ
.
node
 = 
	`¸óãNode
("BXORAN",
yyãxt
);

81  
BXORAN
;

85 
	`¥ötf
("BORAN\n");

86 
yylvÆ
.
node
 = 
	`¸óãNode
("BORAN",
yyãxt
);

87  
BORAN
;

92 
	`¥ötf
("PLUSAN\n");

93 
yylvÆ
.
node
 = 
	`¸óãNode
("PLUSAN",
yyãxt
);

94  
PLUSAN
;

99 
	`¥ötf
("MINUSAN\n");

100 
yylvÆ
.
node
 = 
	`¸óãNode
("MINUSAN",
yyãxt
);

101  
MINUSAN
;

105 
	`¥ötf
("TIMESAN\n");

106 
yylvÆ
.
node
 = 
	`¸óãNode
("TIMESAN",
yyãxt
);

107  
TIMESAN
;

111 
	`¥ötf
("DIVAN\n");

112 
yylvÆ
.
node
 = 
	`¸óãNode
("DIVAN",
yyãxt
);

113  
DIVAN
;

117 
	`¥ötf
("LEQ\n");

118 
yylvÆ
.
node
 = 
	`¸óãNode
("LEQ",
yyãxt
);

119  
LEQ
;

123 
	`¥ötf
("GEQ\n");

124 
yylvÆ
.
node
 = 
	`¸óãNode
("GEQ",
yyãxt
);

125  
GEQ
;

129 
	`¥ötf
("LOGAND\n");

130 
yylvÆ
.
node
 = 
	`¸óãNode
("LOGAND",
yyãxt
);

131  
LOGAND
;

135 
	`¥ötf
("LOGOR\n");

136 
yylvÆ
.
node
 = 
	`¸óãNode
("LOGOR",
yyãxt
);

137  
LOGOR
;

141 
	`¥ötf
("LOGNOT\n");

142 
yylvÆ
.
node
 = 
	`¸óãNode
("LOGNOT",
yyãxt
);

143  
LOGNOT
;

147 
	`¥ötf
("PLUS\n");

148 
yylvÆ
.
node
 = 
	`¸óãNode
("PLUS",
yyãxt
);

149  
PLUS
;

153 
	`¥ötf
("MINUS\n");

154 
yylvÆ
.
node
 = 
	`¸óãNode
("MINUS",
yyãxt
);

155  
MINUS
;

159 
	`¥ötf
("TIMES\n");

160 
yylvÆ
.
node
 = 
	`¸óãNode
("TIMES",
yyãxt
);

161  
TIMES
;

165 
	`¥ötf
("DIV\n");

166 
yylvÆ
.
node
 = 
	`¸óãNode
("DIV",
yyãxt
);

167  
DIV
;

171 
	`¥ötf
("MOD\n");

172 
yylvÆ
.
node
 = 
	`¸óãNode
("MOD",
yyãxt
);

173  
MOD
;

177 
	`¥ötf
("BITAND\n");

178 
yylvÆ
.
node
 = 
	`¸óãNode
("BITAND",
yyãxt
);

179  
BITAND
;

183 
	`¥ötf
("BITXOR\n");

184 
yylvÆ
.
node
 = 
	`¸óãNode
("BITXOR",
yyãxt
);

185  
BITXOR
;

189 
	`¥ötf
("BITOR\n");

190 
yylvÆ
.
node
 = 
	`¸óãNode
("BITOR",
yyãxt
);

191  
BITOR
;

195 
	`¥ötf
("BITNOT\n");

196 
yylvÆ
.
node
 = 
	`¸óãNode
("BITNOT",
yyãxt
);

197  
BITNOT
;

201 
	`¥ötf
("LT\n");

202 
yylvÆ
.
node
 = 
	`¸óãNode
("LT",
yyãxt
);

203  
LT
;

207 
	`¥ötf
("GT\n");

208 
yylvÆ
.
node
 = 
	`¸óãNode
("GT",
yyãxt
);

209  
GT
;

213 
	`¥ötf
("SEMI\n");

214 
yylvÆ
.
node
 = 
	`¸óãNode
("SEMI",
yyãxt
);

215  
SEMI
;

219 
	`¥ötf
("COMMA\n");

220 
yylvÆ
.
node
 = 
	`¸óãNode
("COMMA",
yyãxt
);

221  
COMMA
;

225 
	`¥ötf
("ASSIGNOP\n");

226 
yylvÆ
.
node
 = 
	`¸óãNode
("ASSIGNOP",
yyãxt
);

227  
ASSIGNOP
;

231 
	`¥ötf
("TYPE\n");

232 
yylvÆ
.
node
 = 
	`¸óãNode
("TYPE",
yyãxt
);

233  
TYPE
;

237 
	`¥ötf
("LP\n");

238 
yylvÆ
.
node
 = 
	`¸óãNode
("LP",
yyãxt
);

239  
LP
;

243 
	`¥ötf
("RP\n");

244 
yylvÆ
.
node
 = 
	`¸óãNode
("RP",
yyãxt
);

245  
RP
;

249 
	`¥ötf
("LB\n");

250 
yylvÆ
.
node
 = 
	`¸óãNode
("LB",
yyãxt
);

251  
LB
;

255 
	`¥ötf
("RB\n");

256 
yylvÆ
.
node
 = 
	`¸óãNode
("RB",
yyãxt
);

257  
RB
;

261 
	`¥ötf
("LC\n");

262 
yylvÆ
.
node
 = 
	`¸óãNode
("LC",
yyãxt
);

263  
LC
;

267 
	`¥ötf
("RC\n");

268 
yylvÆ
.
node
 = 
	`¸óãNode
("RC",
yyãxt
);

269  
RC
;

273 
	`¥ötf
("STRUCT\n");

274 
yylvÆ
.
node
 = 
	`¸óãNode
("STRUCT",
yyãxt
);

275  
STRUCT
;

279 
	`¥ötf
("RETURN\n");

280 
yylvÆ
.
node
 = 
	`¸óãNode
("RETURN",
yyãxt
);

281  
RETURN
;

285 
	`¥ötf
("IF\n");

286 
yylvÆ
.
node
 = 
	`¸óãNode
("IF",
yyãxt
);

287  
IF
;

291 
	`¥ötf
("ELSE\n");

292 
yylvÆ
.
node
 = 
	`¸óãNode
("ELSE",
yyãxt
);

293  
ELSE
;

297 
	`¥ötf
("BREAK\n");

298 
yylvÆ
.
node
 = 
	`¸óãNode
("BREAK",
yyãxt
);

299  
BREAK
;

303 
	`¥ötf
("CONT\n");

304 
yylvÆ
.
node
 = 
	`¸óãNode
("CONT",
yyãxt
);

305  
CONT
;

310 
	`¥ötf
("FOR\n");

311 
yylvÆ
.
node
 = 
	`¸óãNode
("FOR",
yyãxt
);

312  
FOR
;

316 
	`¥ötf
("INT: %s\n", 
yyãxt
);

317 
yylvÆ
.
node
 = 
	`¸óãNode
("INT",
yyãxt
);

318  
INT
;

321 {
id
} {

322 
	`¥ötf
("ID: %s\n",
yyãxt
);

323 
yylvÆ
.
node
 = 
	`¸óãNode
("ID",
yyãxt
);

324  
ID
;

329 
löecou¡
++;

332 
	}
%%

334 
	$yywøp
()

336 
	`¥ötf
("yywrap\n");

338 
	}
}

340 
Aâr
 
	$öôAâr
()

342 
Aâr
 
ªt
;

343 
ªt
.
•a˚
 = 0;

344 
ªt
.
isLe·
 = 0;

345  
ªt
;

346 
	}
}

348 
Node
* 
	$öôNode
()

350 
Node
* 
ªt
;

351 
ªt
 = (
Node
*)
	`mÆloc
((Node));

353 
ªt
->
©å
 = 
	`öôAâr
();

354  
ªt
;

355 
	}
}

357 
Node
* 
	$¸óãNode
(* 
tokí
, * 
c⁄ã¡
)

359 
Node
* 
ªs
;

360 
ªs
 = (
Node
*)
	`mÆloc
((Node));

361 
ªs
->
c⁄ã¡
 = 
	`°rdup
(content);

362 
ªs
->
©å
 = 
	`öôAâr
();

363 
ªs
->
tokí
 = 
	`°rdup
(token);

364 
ªs
->
√xt
 = 
NULL
;

365 
ªs
->
chûd
 = 
NULL
;

366  
ªs
;

367 
	}
}

	@smallc.tab.h

37 #i‚de‡
YYTOKENTYPE


38 
	#YYTOKENTYPE


	)

41 
	eyytokíty≥
 {

42 
	mASSIGNOP
 = 258,

43 
	mTYPE
 = 259,

44 
	mLC
 = 260,

45 
	mRC
 = 261,

46 
	mSTRUCT
 = 262,

47 
	mRETURN
 = 263,

48 
	mIF
 = 264,

49 
	mELSE
 = 265,

50 
	mBREAK
 = 266,

51 
	mCONT
 = 267,

52 
	mFOR
 = 268,

53 
	mINT
 = 269,

54 
	mID
 = 270,

55 
	mSEMI
 = 271,

56 
	mCOMMA
 = 272,

57 
	mLP
 = 273,

58 
	mRP
 = 274,

59 
	mLB
 = 275,

60 
	mRB
 = 276,

61 
	mDOT
 = 277,

62 
	mLOGNOT
 = 278,

63 
	mINCR
 = 279,

64 
	mDECR
 = 280,

65 
	mBITNOT
 = 281,

66 
	mMOD
 = 282,

67 
	mTIMES
 = 283,

68 
	mDIV
 = 284,

69 
	mPLUS
 = 285,

70 
	mMINUS
 = 286,

71 
	mSHLEFT
 = 287,

72 
	mSHRIGHT
 = 288,

73 
	mGT
 = 289,

74 
	mGEQ
 = 290,

75 
	mLT
 = 291,

76 
	mLEQ
 = 292,

77 
	mEQU
 = 293,

78 
	mNOTEQ
 = 294,

79 
	mBITAND
 = 295,

80 
	mBITXOR
 = 296,

81 
	mBITOR
 = 297,

82 
	mLOGAND
 = 298,

83 
	mLOGOR
 = 299,

84 
	mPLUSAN
 = 300,

85 
	mMINUSAN
 = 301,

86 
	mTIMESAN
 = 302,

87 
	mDIVAN
 = 303,

88 
	mBANDAN
 = 304,

89 
	mBXORAN
 = 305,

90 
	mBORAN
 = 306,

91 
	mSHLEFTAN
 = 307,

92 
	mSHRIGHTAN
 = 308,

93 
	mBXOR
 = 309,

94 
	mBAND
 = 310

98 
	#ASSIGNOP
 258

	)

99 
	#TYPE
 259

	)

100 
	#LC
 260

	)

101 
	#RC
 261

	)

102 
	#STRUCT
 262

	)

103 
	#RETURN
 263

	)

104 
	#IF
 264

	)

105 
	#ELSE
 265

	)

106 
	#BREAK
 266

	)

107 
	#CONT
 267

	)

108 
	#FOR
 268

	)

109 
	#INT
 269

	)

110 
	#ID
 270

	)

111 
	#SEMI
 271

	)

112 
	#COMMA
 272

	)

113 
	#LP
 273

	)

114 
	#RP
 274

	)

115 
	#LB
 275

	)

116 
	#RB
 276

	)

117 
	#DOT
 277

	)

118 
	#LOGNOT
 278

	)

119 
	#INCR
 279

	)

120 
	#DECR
 280

	)

121 
	#BITNOT
 281

	)

122 
	#MOD
 282

	)

123 
	#TIMES
 283

	)

124 
	#DIV
 284

	)

125 
	#PLUS
 285

	)

126 
	#MINUS
 286

	)

127 
	#SHLEFT
 287

	)

128 
	#SHRIGHT
 288

	)

129 
	#GT
 289

	)

130 
	#GEQ
 290

	)

131 
	#LT
 291

	)

132 
	#LEQ
 292

	)

133 
	#EQU
 293

	)

134 
	#NOTEQ
 294

	)

135 
	#BITAND
 295

	)

136 
	#BITXOR
 296

	)

137 
	#BITOR
 297

	)

138 
	#LOGAND
 298

	)

139 
	#LOGOR
 299

	)

140 
	#PLUSAN
 300

	)

141 
	#MINUSAN
 301

	)

142 
	#TIMESAN
 302

	)

143 
	#DIVAN
 303

	)

144 
	#BANDAN
 304

	)

145 
	#BXORAN
 305

	)

146 
	#BORAN
 306

	)

147 
	#SHLEFTAN
 307

	)

148 
	#SHRIGHTAN
 308

	)

149 
	#BXOR
 309

	)

150 
	#BAND
 310

	)

155 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


156 
	gYYSTYPE


159 
Node
 *
	gnode
;

163 
	tYYSTYPE
;

164 
	#yy°y≥
 
YYSTYPE


	)

165 
	#YYSTYPE_IS_DECLARED
 1

	)

166 
	#YYSTYPE_IS_TRIVIAL
 1

	)

169 
YYSTYPE
 
yylvÆ
;

	@smallc.y

2 
	~<°dio.h
>

3 
	~<°d¨g.h
>

4 
	~<°rög.h
>

6 
	~"d©a°ru˘.h
"

7 
	#YYDEBUG
 1

	)

9 
Node
* 
	ghód
;

10 
Node
* 
Rec‹d
(*, ...);

11 
wÆkThrough
(
Node
* 
n
, 
œyî
);

12 
Node
* 
∑r£
(* 
fûíame
);

13 
yyîr‹
(*);

15 
FILE
 *
	gfout
;

17 
yydebug
;

18 
löecou¡
;

22 
Node
 *
node
;

25 %
tokí
 <
node
> 
ASSIGNOP
 
TYPE


26 %
tokí
 <
node
> 
LC
 
RC


27 %
tokí
 <
node
> 
STRUCT
 
RETURN


28 %
tokí
 <
node
> 
IF
 
ELSE
 
BREAK
 
CONT
 
FOR


29 %
tokí
 <
node
> 
INT
 
ID
 
SEMI
 
COMMA


31 %
tokí
 <
node
> 
LP
 
RP
 
LB
 
RB
 
DOT


32 %
tokí
 <
node
> 
LOGNOT
 
INCR
 
DECR
 
BITNOT


33 %
tokí
 <
node
> 
MOD
 
TIMES
 
DIV


34 %
tokí
 <
node
> 
PLUS
 
MINUS


35 %
tokí
 <
node
> 
SHLEFT
 
SHRIGHT


36 %
tokí
 <
node
> 
GT
 
GEQ
 
LT
 
LEQ


37 %
tokí
 <
node
> 
EQU
 
NOTEQ


38 %
tokí
 <
node
> 
BITAND


39 %
tokí
 <
node
> 
BITXOR


40 %
tokí
 <
node
> 
BITOR


41 %
tokí
 <
node
> 
LOGAND


42 %
tokí
 <
node
> 
LOGOR


43 %
tokí
 <
node
> 
PLUSAN
 
MINUSAN
 
TIMESAN
 
DIVAN
 
BANDAN
 
BXORAN
 
BORAN
 
SHLEFTAN
 
SHRIGHTAN


45 %
ty≥
 <
node
> 
PROGRAM
 
EXTDEFS
 
EXTDEF
 
EXTVARS
 
SPEC
 
STSPEC
 
OPTTAG


46 %
ty≥
 <
node
> 
VAR
 
FUNC
 
PARAS
 
PARA
 
STMTBLOCK
 
STMTS
 
STMT
 
ESTMT


47 %
ty≥
 <
node
> 
DEFS
 
DEF
 
DECS
 
DEC
 
INIT
 
EXP
 
ARRS
 
ARGS


48 %
°¨t
 
PROGRAM


50 %
right
 
PLUSAN
 
MINUSAN
 
TIMESAN
 
DIVAN
 
BANDAN
 
BORAN
 
BXORAN
 
SHLEFTAN
 
SHRIGHTAN
 
ASSIGNOP


51 %
À·
 
LOGOR


52 %
À·
 
LOGAND


53 %
À·
 
BITOR


54 %
À·
 
BITXOR


55 %
À·
 
BITAND


56 %
À·
 
EQU
 
NOTEQ


57 %
À·
 
GT
 
GEQ
 
LT
 
LEQ


58 %
À·
 
SHLEFT
 
SHRIGHT


59 %
À·
 
PLUS
 
MINUS


60 %
À·
 
MOD
 
TIMES
 
DIV


61 %
right
 
LOGNOT
 
INCR
 
DECR
 
BITNOT


62 %
À·
 
LP
 
RP
 
LB
 
RB
 
DOT


64 %% /* 
	$yy∑r£
 */ 
	`yyÀx
()

65 
PROGRAM
:

66 
EXTDEFS
{

67 
$$
 = 
	`Rec‹d
("PROGRAM", 
$1
, 
NULL
);

71 
EXTDEFS
:

72 
EXTDEF
 
EXTDEFS
{

73 
$$
 = 
	`Rec‹d
("EXTDEFS",
$1
,
$2
,
NULL
);

75 | {
$$
 = 
	`Rec‹d
("EXTDEFS",
NULL
);};

77 
EXTDEF
:

78 
SPEC
 
EXTVARS
 
SEMI
 {

79 
$$
 = 
	`Rec‹d
("EXTDEF",
$1
,
$2
,
$3
,
NULL
);

81 | 
SPEC
 
FUNC
 
STMTBLOCK
 {

82 
$$
 = 
	`Rec‹d
("EXTDEF",
$1
,
$2
,
$3
,
NULL
);

85 
EXTVARS
:

86 
DEC
 {

87 
$$
 = 
	`Rec‹d
("EXTVARS", 
$1
,
NULL
);

89 | 
DEC
 
COMMA
 
EXTVARS
 {

90 
$$
 = 
	`Rec‹d
("EXTVARS", 
$1
,
$2
,
$3
,
NULL
);

93 
$$
 = 
	`Rec‹d
("EXTVARS",
NULL
);

96 
SPEC
:

97 
TYPE
 {

98 
$$
 = 
	`Rec‹d
("SPEC", 
$1
, 
NULL
);

100 | 
STSPEC
 {

101 
$$
 = 
	`Rec‹d
("SPEC", 
$1
, 
NULL
);

104 
STSPEC
:

105 
STRUCT
 
OPTTAG
 
LC
 
DEFS
 
RC
 {

106 
$$
 = 
	`Rec‹d
("STSPEC", 
$1
,
$2
,
$3
,
$4
,
$5
,
NULL
);

108 | 
STRUCT
 
ID
 {

109 
$$
 = 
	`Rec‹d
("STSPEC", 
$1
,
$2
,
NULL
);

112 
OPTTAG
:

113 
ID
 {

114 
$$
 = 
	`Rec‹d
("OPTTAG", 
$1
,
NULL
);

117 
$$
 = 
	`Rec‹d
("OPTTAG", 
NULL
);

120 
VAR
 :

121 
ID
 {

122 
$$
 = 
	`Rec‹d
("VAR",
$1
, 
NULL
);

124 | 
VAR
 
LB
 
INT
 
RB
 {

125 
$$
 = 
	`Rec‹d
("VAR",
$1
, 
$2
, 
$3
, 
$4
, 
NULL
);

128 
FUNC
:

129 
ID
 
LP
 
PARAS
 
RP
 {

130 
$$
 = 
	`Rec‹d
("FUNC",
$1
,
$2
,
$3
,
$4
, 
NULL
);

133 
PARAS
:

134 
PARA
 
COMMA
 
PARAS
 {

135 
$$
 = 
	`Rec‹d
("PARAS", 
$1
, 
$2
, 
$3
, 
NULL
);

137 | 
PARA
 {

138 
$$
 = 
	`Rec‹d
("PARAS", 
$1
, 
NULL
);

141 
$$
 = 
	`Rec‹d
("PARAS", 
NULL
);

144 
PARA
:

145 
SPEC
 
VAR
 {

146 
$$
 = 
	`Rec‹d
("PARA", 
$1
, 
$2
, 
NULL
);

149 
STMTBLOCK
:

150 
LC
 
DEFS
 
STMTS
 
RC
 {

151 
$$
 = 
	`Rec‹d
("STMTBLOCK",
$1
, 
$2
, 
$3
, 
$4
, 
NULL
);

154 
STMTS
:

155 
STMT
 
STMTS
 {

156 
$$
 = 
	`Rec‹d
("STMTS", 
$1
, 
$2
, 
NULL
);

159 
$$
 = 
	`Rec‹d
("STMTS", 
NULL
);

162 
STMT
 :

163 
EXP
 
SEMI
 {

164 
$$
 = 
	`Rec‹d
("STMT", 
$1
, 
$2
, 
NULL
);

166 | 
STMTBLOCK
 {

167 
$$
 = 
	`Rec‹d
("STMT",
$1
, 
NULL
);

169 | 
RETURN
 
EXP
 
SEMI
 {

170 
$$
 = 
	`Rec‹d
("STMT", 
$1
, 
$2
, 
$3
, 
NULL
);

172 | 
IF
 
LP
 
EXP
 
RP
 
STMT
 
ESTMT
 {

173 
$$
 = 
	`Rec‹d
("STMT", 
$1
,
$2
,
$3
,
$4
,
$5
,
$6
,
NULL
);

175 | 
FOR
 
LP
 
EXP
 
SEMI
 EXP SEMI EXP 
RP
 
STMT
 {

176 
$$
 = 
	`Rec‹d
("STMT", 
$1
,
$2
,
$3
,
$4
,
$5
,
$6
,
$7
,
$8
,
$9
,
NULL
);

178 | 
CONT
 
SEMI
 {

179 
$$
 = 
	`Rec‹d
("STMT", 
$1
,
$2
,
NULL
);

181 | 
BREAK
 
SEMI
 {

182 
$$
 = 
	`Rec‹d
("STMT",
$1
,
$2
,
NULL
);

185 
ESTMT
:

186 
ELSE
 
STMT
 {

187 
$$
 = 
	`Rec‹d
("ESTMT", 
$1
, 
$2
,
NULL
);

190 
$$
 = 
	`Rec‹d
("ESTMT", 
NULL
);

193 
DEFS
:

194 
DEF
 
DEFS
 {

195 
$$
 = 
	`Rec‹d
("DEFS",
$1
,
$2
,
NULL
);

198 
$$
 = 
	`Rec‹d
("DEFS", 
NULL
);

201 
DEF
:

202 
SPEC
 
DECS
 
SEMI
 {

203 
$$
 = 
	`Rec‹d
("DEF", 
$1
, 
$2
, 
$3
,
NULL
);

206 
DECS
:

207 
DEC
 
COMMA
 
DECS
 {

208 
$$
 = 
	`Rec‹d
("DECS", 
$1
, 
$2
, 
$3
, 
NULL
);

210 | 
DEC
 {

211 
$$
 = 
	`Rec‹d
("DECS", 
$1
, 
NULL
);

214 
DEC
:

215 
VAR
 {

216 
$$
 = 
	`Rec‹d
("DEC",
$1
, 
NULL
);

218 | 
VAR
 
ASSIGNOP
 
INIT
 {

219 
$$
 = 
	`Rec‹d
("DEC", 
$1
, 
$2
, 
$3
,
NULL
);

222 
INIT
:

223 
EXP
 {

224 
$$
 = 
	`Rec‹d
("INIT", 
$1
, 
NULL
);

226 | 
LC
 
ARGS
 
RC
 {

227 
$$
 = 
	`Rec‹d
("INIT", 
$1
, 
$2
, 
$3
, 
NULL
);

230 
EXP
:

231 
ID
 {

232 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
NULL
);

234 | 
EXP
 
PLUS
 EXP {

235 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

237 | 
EXP
 
MINUS
 EXP {

238 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

240 | 
EXP
 
TIMES
 EXP {

241 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

243 | 
EXP
 
DIV
 EXP {

244 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

246 | 
EXP
 
PLUSAN
 EXP {

247 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

249 | 
EXP
 
MINUSAN
 EXP {

250 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

252 | 
EXP
 
TIMESAN
 EXP {

253 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

255 | 
EXP
 
DIVAN
 EXP {

256 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

258 | 
EXP
 
MOD
 EXP {

259 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

261 | 
EXP
 
SHLEFT
 EXP {

262 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

264 | 
EXP
 
SHRIGHT
 EXP {

265 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

267 | 
EXP
 
GT
 EXP {

268 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

270 | 
EXP
 
GEQ
 EXP {

271 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

273 | 
EXP
 
LT
 EXP {

274 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

276 | 
EXP
 
LEQ
 EXP {

277 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

279 | 
EXP
 
EQU
 EXP {

280 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

282 | 
EXP
 
NOTEQ
 EXP {

283 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

285 | 
EXP
 
BITAND
 EXP {

286 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

288 | 
EXP
 
BITXOR
 EXP {

289 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

291 | 
EXP
 
BITOR
 EXP {

292 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

294 | 
EXP
 
LOGAND
 EXP {

295 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

297 | 
EXP
 
LOGOR
 EXP {

298 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

300 | 
EXP
 
BANDAN
 EXP {

301 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

303 | 
EXP
 
BXORAN
 EXP {

304 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

306 | 
EXP
 
BORAN
 EXP {

307 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

309 | 
EXP
 
SHLEFTAN
 EXP {

310 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

312 | 
EXP
 
SHRIGHTAN
 EXP {

313 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

315 | 
EXP
 
DOT
 EXP {

316 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

318 | 
EXP
 
ASSIGNOP
 EXP {

319 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

321 | 
MINUS
 
EXP
 {

322 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
NULL
);

324 | 
INCR
 
EXP
 {

325 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
NULL
);

327 | 
DECR
 
EXP
 {

328 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
NULL
);

330 | 
BITNOT
 
EXP
 {

331 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
NULL
);

333 | 
LOGNOT
 
EXP
 {

334 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
NULL
);

336 | 
LP
 
EXP
 
RP
 {

337 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
NULL
);

339 | 
ID
 
LP
 
ARGS
 
RP
 {

340 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
$3
, 
$4
, 
NULL
);

342 | 
ID
 
ARRS
 {

343 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
$2
, 
NULL
);

345 | 
INT
 {

346 
$$
 = 
	`Rec‹d
("EXP", 
$1
, 
NULL
);

349 
$$
 = 
	`Rec‹d
("EXP", 
NULL
);

352 
ARRS
:

353 
LB
 
EXP
 
RB
 
ARRS
 {

354 
$$
 = 
	`Rec‹d
("ARRS", 
$1
, 
$2
, 
$3
, 
$4
, 
NULL
);

357 
$$
 = 
	`Rec‹d
("ARRS", 
NULL
);

360 
ARGS
:

361 
EXP
 
COMMA
 
ARGS
 {

362 
$$
 = 
	`Rec‹d
("ARGS", 
$1
, 
$2
, 
$3
, 
NULL
);

364 | 
EXP
 {

365 
$$
 = 
	`Rec‹d
("ARGS", 
$1
, 
NULL
);

368 
	}
%%

370 
Node
* 
	$Rec‹d
(* 
c⁄ã¡
, ...){

371 
Node
* 
ªs
 = (Node*)
	`mÆloc
((Node));

372 
ªs
->
tokí
 = 
	`°rdup
(
c⁄ã¡
);

373 
ªs
->
c⁄ã¡
 = 
NULL
;

374 
ªs
->
©å
.
isLe·
 = 0;

375 
va_li°
 
≠
;

376 
	`va_°¨t
(
≠
, 
c⁄ã¡
);

378 
Node
* 
tmp
;

379 
tmp
 = 
	`va_¨g
(
≠
, 
Node
*);

381 
ªs
->
chûd
 = 
tmp
;

382 
ªs
->
√xt
 = 
NULL
;

384 
Node
* 
âmp
;

385 
tmp
 !
NULL
){

386 
âmp
 = 
	`va_¨g
(
≠
, 
Node
*);

387 
tmp
->
√xt
 = 
âmp
;

388 
tmp
 = 
âmp
;

390 
	`va_íd
(
≠
);

392 
hód
 = 
ªs
;

393  
ªs
;

394 
	}
}

396 
	$wÆkThrough
(
Node
* 
n
, 
œyî
){

397 i‡(
n
->
tokí
 !
NULL
){

398 
i
 = 0;ò< 
œyî
 * 2; i++)

399 
	`¥ötf
(" ");

400 * 
c
 = 
n
->
tokí
;

402 
	`¥ötf
("%s", 
n
->
tokí
);

404 i‡(
n
->
c⁄ã¡
 !
NULL
){

405 
	`¥ötf
(" ");

406 
	`¥ötf
("%s", 
n
->
c⁄ã¡
);

408 
	`¥ötf
("\n");

410 i‡(
n
->
chûd
 !
NULL
){

411 
	`wÆkThrough
(
n
->
chûd
, 
œyî
+1);

414 i‡(
n
->
√xt
 !
NULL
Ë
	`wÆkThrough
“->√xt, 
œyî
);

417 
	}
}

419 
	$yyîr‹
(*
msg
){

422 
	}
}

424 
Node
* 
	$∑r£
(* 
fûíame
){

425 
yydebug
 = 0;

426 
	`‰e›í
(
fûíame
,"r",
°dö
);

428 
	`yy∑r£
();

434  
hód
;

435 
	}
}

	@src/main.cpp

1 
	~<io°ªam
>

2 
	~<°rög
>

3 
	~<f°ªam
>

4 
	~"../ö˛ude/d©a°ru˘.h
"

5 
	~<°dio.h
>

8 
usög
 
«me•a˚
 
	g°d
;

10 
of°ªam
 
	gfout
;

13 
Node
* 
∑r£
(* 
fûíame
);

14 
wÆkThrough
(
Node
* 
n
,
œyî
);

17 
	$code_PROGRAM
(
Node
* 
n
){

18 
°rög
 
code
 = "";

19 
code
 += ";author YWJ\n";

20 
code
 += "@.str =Örivate unnamed_addr constant [3 x i8] c\"%d\\00\",álign 1\n";

21 
code
 += "@.str1 =Örivate unnamed_addr constant [4 x i8] c\"%d\\00\",álign 1\n";

22 
code
 += "declare i32 @printf(*i8, ...)\n";

23 
code
 += "declare i32 @__isoc99_scanf(i8*, ...)\n";

24 
cout
<<
code
;

26 
	}
}

28 
	$maö
(
¨gc
, * 
¨gv
[])

30 
Node
* 
hód
;

31 
fout
.
	`›í
("out.ll");

32 i‡(
¨gc
 == 2)

34 
hód
 = 
	`∑r£
(
¨gv
[1]);

36 
	`code_PROGRAM
(
hód
);

37 
°d
::
cout
<<"Hhahaha";

39 
	}
}

	@testcases/[done]bug.c

1 
	$ölöe1
(
A
) {

2 
	`wrôe
(
A
);

4 
	}
}

6 
	$ölöe2
(
a
, 
A
) {

7 
	`ölöe1
(
A
);

8 
a
 = 1;

10 
	}
}

12 
	$maö
() {

13 
a
;

14 
a
 = 0;

15 
	`wrôe
(
a
);

16 
	`ölöe2
(9, 
a
);

17 
	`wrôe
(
a
);

18 
a
 = 2;

19 
	`ölöe1
(
a
);

20 
	`wrôe
(
a
);

22 
	}
}

	@testcases/[done]fact.c

1 
	$Á˘
(
n
)

3 i‡(
n
<1)  1;

4  
n
*
	`Á˘
(n-1);

5 
	}
}

7 
	$maö
()

9 
n
;

10 
	`ªad
(
n
);

11 
	`wrôe
(
	`Á˘
(
n
));

12 
	}
}

	@testcases/[done]gs.c

1 
	gc
,
	gb
;

2 
	$a
(
m
, 
n
)

4 i‡(
m
==
n
||n==0)  1;

5  
	`a
(
m
-1,
n
-1)+a(m-1,n);

6 
	}
}

8 
	$maö
()

10 
	`ªad
(
c
);

11 
	`ªad
(
b
);

12 
	`wrôe
(
	`a
(
c
,
b
));

13 
	}
}

	@testcases/[done]leaf.c

1 
	$Àaf
(
g
, 
h
, 
i
, 
j
)

3 
f
;

4 
f
 = (
g
+
h
Ë- (
i
+
j
);

5  
f
;

6 
	}
}

8 
	$maö
()

10 
	`wrôe
(
	`Àaf
(3,44,555,6666));

12 
	}
}

	@testcases/[done]sort.c

1 
	gv
[1001];

2 
	$sw≠
(
k
)

4 
tmp
;

5 
tmp
 = 
v
[
k
];

6 
v
[
k
] = v[k+1];

7 
v
[
k
+1] =
tmp
;

9 
	}
}

11 
	$maö
()

13 
n
,
i
,
j
;

14 
	`ªad
(
n
);

15 
i
 = 0; i < 
n
; ++iË
	`ªad
(
v
[i]);

16 
i
 = 0; i < 
n
; ++i) {

17 
j
 = 
i
-1; j >0 && 
v
[j]>v[j+1]; j -= 1) {

18 
	`sw≠
(
j
);

21 
i
 = 0; i < 
n
; ++iË
	`wrôe
(
v
[i]);

23 
	}
}

	@testcases/[done]sum.c

1 
	$sum
(
n
, 
acc
) {

2 i‡(
n
>0Ë 
	`sum
“-1,
acc
+n);

3  
acc
;

4 
	}
}

6 
	$maö
()

8 
a
;

9 
	`ªad
(
a
);

10 
	`wrôe
(
	`sum
(
a
,0));

11 
	}
}

	@testcases/[done]sum2.c

1 
	$maö
()

3 
i
;

4 
sum
 = 0;

5 
i
 = 0; i <= 100; ++i) {

6 
sum
 = sum + 
i
*i;

8 
	`wrôe
(
sum
);

9 
	}
}

	@testcases/[done]tak.c

1 
	$èk
(
x
, 
y
, 
z
)

3 i‡(
y
<
x
Ë 1+
	`èk
—ak(x-1,y,
z
),tak(y-1,z,x),tak(z-1,x,y));

4  
z
;

5 
	}
}

7 
	$maö
()

9 
	`wrôe
(
	`èk
(18,12,6));

10 
	}
}

	@y.tab.c

44 
	#YYBISON
 1

	)

47 
	#YYBISON_VERSION
 "3.0.2"

	)

50 
	#YYSKELETON_NAME
 "yacc.c"

	)

53 
	#YYPURE
 0

	)

56 
	#YYPUSH
 0

	)

59 
	#YYPULL
 1

	)

67 
	~<°dio.h
>

68 
	~<°d¨g.h
>

69 
	~<°rög.h
>

71 
	~"d©a°ru˘.h
"

72 
	#YYDEBUG
 1

	)

74 
Node
* 
	ghód
;

75 
Node
* 
Rec‹d
(*, ...);

76 
wÆkThrough
(
Node
* 
n
, 
œyî
);

77 
Node
* 
∑r£
(* 
fûíame
);

78 
yyîr‹
(*);

80 
FILE
 *
	gfout
;

82 
yydebug
;

83 
löecou¡
;

87 #i‚de‡
YY_NULLPTR


88 #i‡
deföed
 
__˝lu•lus
 && 201103L <= __cplusplus

89 
	#YY_NULLPTR
 
nuŒ±r


	)

91 
	#YY_NULLPTR
 0

	)

96 #ifde‡
YYERROR_VERBOSE


97 #unde‡
YYERROR_VERBOSE


98 
	#YYERROR_VERBOSE
 1

	)

100 
	#YYERROR_VERBOSE
 0

	)

105 #i‚de‡
YY_YY_Y_TAB_H_INCLUDED


106 
	#YY_YY_Y_TAB_H_INCLUDED


	)

108 #i‚de‡
YYDEBUG


109 
	#YYDEBUG
 0

	)

111 #i‡
YYDEBUG


112 
yydebug
;

116 #i‚de‡
YYTOKENTYPE


117 
	#YYTOKENTYPE


	)

118 
	eyytokíty≥


120 
	mASSIGNOP
 = 258,

121 
	mTYPE
 = 259,

122 
	mLC
 = 260,

123 
	mRC
 = 261,

124 
	mSTRUCT
 = 262,

125 
	mRETURN
 = 263,

126 
	mIF
 = 264,

127 
	mELSE
 = 265,

128 
	mBREAK
 = 266,

129 
	mCONT
 = 267,

130 
	mFOR
 = 268,

131 
	mINT
 = 269,

132 
	mID
 = 270,

133 
	mSEMI
 = 271,

134 
	mCOMMA
 = 272,

135 
	mLP
 = 273,

136 
	mRP
 = 274,

137 
	mLB
 = 275,

138 
	mRB
 = 276,

139 
	mDOT
 = 277,

140 
	mLOGNOT
 = 278,

141 
	mINCR
 = 279,

142 
	mDECR
 = 280,

143 
	mBITNOT
 = 281,

144 
	mMOD
 = 282,

145 
	mTIMES
 = 283,

146 
	mDIV
 = 284,

147 
	mPLUS
 = 285,

148 
	mMINUS
 = 286,

149 
	mSHLEFT
 = 287,

150 
	mSHRIGHT
 = 288,

151 
	mGT
 = 289,

152 
	mGEQ
 = 290,

153 
	mLT
 = 291,

154 
	mLEQ
 = 292,

155 
	mEQU
 = 293,

156 
	mNOTEQ
 = 294,

157 
	mBITAND
 = 295,

158 
	mBITXOR
 = 296,

159 
	mBITOR
 = 297,

160 
	mLOGAND
 = 298,

161 
	mLOGOR
 = 299,

162 
	mPLUSAN
 = 300,

163 
	mMINUSAN
 = 301,

164 
	mTIMESAN
 = 302,

165 
	mDIVAN
 = 303,

166 
	mBANDAN
 = 304,

167 
	mBXORAN
 = 305,

168 
	mBORAN
 = 306,

169 
	mSHLEFTAN
 = 307,

170 
	mSHRIGHTAN
 = 308

174 
	#ASSIGNOP
 258

	)

175 
	#TYPE
 259

	)

176 
	#LC
 260

	)

177 
	#RC
 261

	)

178 
	#STRUCT
 262

	)

179 
	#RETURN
 263

	)

180 
	#IF
 264

	)

181 
	#ELSE
 265

	)

182 
	#BREAK
 266

	)

183 
	#CONT
 267

	)

184 
	#FOR
 268

	)

185 
	#INT
 269

	)

186 
	#ID
 270

	)

187 
	#SEMI
 271

	)

188 
	#COMMA
 272

	)

189 
	#LP
 273

	)

190 
	#RP
 274

	)

191 
	#LB
 275

	)

192 
	#RB
 276

	)

193 
	#DOT
 277

	)

194 
	#LOGNOT
 278

	)

195 
	#INCR
 279

	)

196 
	#DECR
 280

	)

197 
	#BITNOT
 281

	)

198 
	#MOD
 282

	)

199 
	#TIMES
 283

	)

200 
	#DIV
 284

	)

201 
	#PLUS
 285

	)

202 
	#MINUS
 286

	)

203 
	#SHLEFT
 287

	)

204 
	#SHRIGHT
 288

	)

205 
	#GT
 289

	)

206 
	#GEQ
 290

	)

207 
	#LT
 291

	)

208 
	#LEQ
 292

	)

209 
	#EQU
 293

	)

210 
	#NOTEQ
 294

	)

211 
	#BITAND
 295

	)

212 
	#BITXOR
 296

	)

213 
	#BITOR
 297

	)

214 
	#LOGAND
 298

	)

215 
	#LOGOR
 299

	)

216 
	#PLUSAN
 300

	)

217 
	#MINUSAN
 301

	)

218 
	#TIMESAN
 302

	)

219 
	#DIVAN
 303

	)

220 
	#BANDAN
 304

	)

221 
	#BXORAN
 305

	)

222 
	#BORAN
 306

	)

223 
	#SHLEFTAN
 307

	)

224 
	#SHRIGHTAN
 308

	)

227 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


228 
YYSTYPE
 
	tYYSTYPE
;

229 
	uYYSTYPE


233 
Node
 *
	mnode
;

237 
	#YYSTYPE_IS_TRIVIAL
 1

	)

238 
	#YYSTYPE_IS_DECLARED
 1

	)

242 
YYSTYPE
 
yylvÆ
;

244 
yy∑r£
 ();

256 #ifde‡
YYTYPE_UINT8


257 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

259 
	tyyty≥_uöt8
;

262 #ifde‡
YYTYPE_INT8


263 
YYTYPE_INT8
 
	tyyty≥_öt8
;

265 sig√d 
	tyyty≥_öt8
;

268 #ifde‡
YYTYPE_UINT16


269 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

271 
	tyyty≥_uöt16
;

274 #ifde‡
YYTYPE_INT16


275 
YYTYPE_INT16
 
	tyyty≥_öt16
;

277 
	tyyty≥_öt16
;

280 #i‚de‡
YYSIZE_T


281 #ifde‡
__SIZE_TYPE__


282 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

283 #ñi‡
deföed
 
size_t


284 
	#YYSIZE_T
 
size_t


	)

285 #ñi‡! 
deföed
 
YYSIZE_T


286 
	~<°ddef.h
>

287 
	#YYSIZE_T
 
size_t


	)

289 
	#YYSIZE_T
 

	)

293 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

295 #i‚de‡
YY_


296 #i‡
deföed
 
YYENABLE_NLS
 && YYENABLE_NLS

297 #i‡
ENABLE_NLS


298 
	~<liböé.h
>

299 
	#YY_
(
Msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", Msgid)

	)

302 #i‚de‡
YY_


303 
	#YY_
(
Msgid
Ë
	)
Msgid

307 #i‚de‡
YY_ATTRIBUTE


308 #i‡(
deföed
 
__GNUC__
 \

309 && (2 < 
	g__GNUC__
 || (__GNUC__ =2 && 96 <
__GNUC_MINOR__
))) \

310 || 
deföed
 
__SUNPRO_C
 && 0x5110 <= __SUNPRO_C

311 
	#YY_ATTRIBUTE
(
S≥c
Ë
	`__©åibuã__
(S≥c)

	)

313 
	#YY_ATTRIBUTE
(
S≥c
Ë

	)

317 #i‚de‡
YY_ATTRIBUTE_PURE


318 
	#YY_ATTRIBUTE_PURE
 
	`YY_ATTRIBUTE
 ((
__puª__
))

	)

321 #i‚de‡
YY_ATTRIBUTE_UNUSED


322 
	#YY_ATTRIBUTE_UNUSED
 
	`YY_ATTRIBUTE
 ((
__unu£d__
))

	)

325 #i‡!
deföed
 
_N‹ëu∫
 \

326 && (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 201112)

327 #i‡
deföed
 
_MSC_VER
 && 1200 <= _MSC_VER

328 
	#_N‹ëu∫
 
	`__de˛•ec
 (
n‹ëu∫
)

	)

330 
	#_N‹ëu∫
 
	`YY_ATTRIBUTE
 ((
__n‹ëu∫__
))

	)

335 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


336 
	#YYUSE
(
E
Ë((Ë(E))

	)

338 
	#YYUSE
(
E
Ë

	)

341 #i‡
deföed
 
__GNUC__
 && 407 <__GNUC__ * 100 + 
__GNUC_MINOR__


343 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

344 
	`_Pøgma
 ("GCC diagnosticÖush") \

345 
	`_Pøgma
 ("GCC diagnostic ignored \"-Wuninitialized\"")\

346 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wmaybe-unöôülized\"")

	)

347 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END
 \

348 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

350 
	#YY_INITIAL_VALUE
(
VÆue
Ë
	)
Value

352 #i‚de‡
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


353 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


	)

354 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END


	)

356 #i‚de‡
YY_INITIAL_VALUE


357 
	#YY_INITIAL_VALUE
(
VÆue
Ë

	)

361 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


365 #ifde‡
YYSTACK_USE_ALLOCA


366 #i‡
YYSTACK_USE_ALLOCA


367 #ifde‡
__GNUC__


368 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

369 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


370 
	~<Æloˇ.h
>

371 #ñi‡
deföed
 
_AIX


372 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

373 #ñi‡
deföed
 
_MSC_VER


374 
	~<mÆloc.h
>

375 
	#Æloˇ
 
_Æloˇ


	)

377 
	#YYSTACK_ALLOC
 
Æloˇ


	)

378 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
EXIT_SUCCESS


379 
	~<°dlib.h
>

381 #i‚de‡
EXIT_SUCCESS


382 
	#EXIT_SUCCESS
 0

	)

389 #ifde‡
YYSTACK_ALLOC


391 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

392 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


397 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

400 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

401 
	#YYSTACK_FREE
 
YYFREE


	)

402 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


403 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

405 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
EXIT_SUCCESS
 \

406 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

407 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

408 
	~<°dlib.h
>

409 #i‚de‡
EXIT_SUCCESS


410 
	#EXIT_SUCCESS
 0

	)

413 #i‚de‡
YYMALLOC


414 
	#YYMALLOC
 
mÆloc


	)

415 #i‡! 
deföed
 
mÆloc
 && ! deföed 
EXIT_SUCCESS


416 *
mÆloc
 (
YYSIZE_T
);

419 #i‚de‡
YYFREE


420 
	#YYFREE
 
‰ì


	)

421 #i‡! 
deföed
 
‰ì
 && ! deföed 
EXIT_SUCCESS


422 
‰ì
 (*);

429 #i‡(! 
deföed
 
yyovîÊow
 \

430 && (! 
deföed
 
	g__˝lu•lus
 \

431 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

434 
	uyyÆloc


436 
yyty≥_öt16
 
	myyss_Æloc
;

437 
YYSTYPE
 
	myyvs_Æloc
;

441 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

445 
	#YYSTACK_BYTES
(
N
) \

446 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

447 + 
YYSTACK_GAP_MAXIMUM
)

	)

449 
	#YYCOPY_NEEDED
 1

	)

456 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

459 
YYSIZE_T
 
yy√wbyãs
; \

460 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

461 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

462 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

463 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

465 0)

	)

469 #i‡
deföed
 
YYCOPY_NEEDED
 && YYCOPY_NEEDED

472 #i‚de‡
YYCOPY


473 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

474 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

475 
	`__buûtö_mem˝y
 (
D°
, 
Src
, (
Cou¡
Ë*  (*(Src)))

	)

477 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

480 
YYSIZE_T
 
yyi
; \

481 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

482 (
D°
)[
yyi
] = (
Src
)[yyi]; \

484 0)

	)

490 
	#YYFINAL
 10

	)

492 
	#YYLAST
 732

	)

495 
	#YYNTOKENS
 54

	)

497 
	#YYNNTS
 24

	)

499 
	#YYNRULES
 87

	)

501 
	#YYNSTATES
 167

	)

505 
	#YYUNDEFTOK
 2

	)

506 
	#YYMAXUTOK
 308

	)

508 
	#YYTRANSLATE
(
YYX
) \

509 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

513 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

548 #i‡
YYDEBUG


550 c⁄° 
yyty≥_uöt16
 
	gyyæöe
[] =

564 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 0

567 c⁄° *c⁄° 
	gyyäame
[] =

578 "DEF", "DECS", "DEC", "INIT", "EXP", "ARRS", "ARGS", 
YY_NULLPTR


582 #ifde‡
YYPRINT


585 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

596 
	#YYPACT_NINF
 -153

	)

598 
	#yy∑˘_vÆue_is_deÁu…
(
Yy°©e
) \

599 (!!((
Yy°©e
Ë=(-153)))

	)

601 
	#YYTABLE_NINF
 -26

	)

603 
	#yyèbÀ_vÆue_is_îr‹
(
YyèbÀ_vÆue
) \

604 0

	)

608 c⁄° 
yyty≥_öt16
 
	gyy∑˘
[] =

632 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

654 c⁄° 
yyty≥_öt16
 
	gyypgŸo
[] =

662 c⁄° 
yyty≥_öt16
 
	gyydefgŸo
[] =

672 c⁄° 
yyty≥_öt16
 
	gyyèbÀ
[] =

750 c⁄° 
yyty≥_öt16
 
	gyycheck
[] =

830 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

852 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

866 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

880 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

881 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

882 
	#YYEMPTY
 (-2)

	)

883 
	#YYEOF
 0

	)

885 
	#YYACCEPT
 
yyac˚±œb


	)

886 
	#YYABORT
 
yyab‹éab


	)

887 
	#YYERROR
 
yyîr‹œb


	)

890 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

892 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

894 i‡(
yych¨
 =
YYEMPTY
) \

896 
yych¨
 = (
Tokí
); \

897 
yylvÆ
 = (
VÆue
); \

898 
	`YYPOPSTACK
 (
yyÀn
); \

899 
yy°©e
 = *
yys•
; \

900 
yybackup
; \

904 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

905 
YYERROR
; \

907 0)

	)

910 
	#YYTERROR
 1

	)

911 
	#YYERRCODE
 256

	)

916 #i‡
YYDEBUG


918 #i‚de‡
YYFPRINTF


919 
	~<°dio.h
>

920 
	#YYFPRINTF
 
Ârötf


	)

923 
	#YYDPRINTF
(
Args
) \

925 i‡(
yydebug
) \

926 
YYFPRINTF
 
Args
; \

927 } 0)

	)

930 #i‚de‡
YY_LOCATION_PRINT


931 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

935 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

937 i‡(
yydebug
) \

939 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

940 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

941 
Ty≥
, 
VÆue
); \

942 
	`YYFPRINTF
 (
°dîr
, "\n"); \

944 } 0)

	)

952 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

954 
FILE
 *
yyo
 = 
yyouçut
;

955 
	`YYUSE
 (
yyo
);

956 i‡(!
yyvÆuï
)

958 #ifde‡
YYPRINT


959 i‡(
yyty≥
 < 
YYNTOKENS
)

960 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

962 
	`YYUSE
 (
yyty≥
);

963 
	}
}

971 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

973 
	`YYFPRINTF
 (
yyouçut
, "%s %s (",

974 
yyty≥
 < 
YYNTOKENS
 ? "tokí" : "¡îm", 
yyäame
[yytype]);

976 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
);

977 
	`YYFPRINTF
 (
yyouçut
, ")");

978 
	}
}

986 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

988 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

989 ; 
yybŸtom
 <
yyt›
; yybottom++)

991 
yybŸ
 = *
yybŸtom
;

992 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

994 
	`YYFPRINTF
 (
°dîr
, "\n");

995 
	}
}

997 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

999 i‡(
yydebug
) \

1000 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

1001 } 0)

	)

1009 
	$yy_ªdu˚_¥öt
 (
yyty≥_öt16
 *
yys•
, 
YYSTYPE
 *
yyv•
, 
yyruÀ
)

1011 
yy o
 = 
yyæöe
[
yyruÀ
];

1012 
yyƒhs
 = 
yyr2
[
yyruÀ
];

1013 
yyi
;

1014 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

1015 
yyruÀ
 - 1, 
yy o
);

1017 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

1019 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

1020 
	`yy_symbﬁ_¥öt
 (
°dîr
,

1021 
yy°os
[
yys•
[
yyi
 + 1 - 
yyƒhs
]],

1022 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

1024 
	`YYFPRINTF
 (
°dîr
, "\n");

1026 
	}
}

1028 
	#YY_REDUCE_PRINT
(
RuÀ
) \

1030 i‡(
yydebug
) \

1031 
	`yy_ªdu˚_¥öt
 (
yys•
, 
yyv•
, 
RuÀ
); \

1032 } 0)

	)

1036 
	gyydebug
;

1038 
	#YYDPRINTF
(
Args
)

	)

1039 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

1040 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

1041 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

1046 #i‚de‡
YYINITDEPTH


1047 
	#YYINITDEPTH
 200

	)

1057 #i‚de‡
YYMAXDEPTH


1058 
	#YYMAXDEPTH
 10000

	)

1062 #i‡
YYERROR_VERBOSE


1064 #i‚de‡
yy°æí


1065 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


1066 
	#yy°æí
 
°æí


	)

1069 
YYSIZE_T


1070 
	$yy°æí
 (c⁄° *
yy°r
)

1072 
YYSIZE_T
 
yyÀn
;

1073 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

1075  
yyÀn
;

1076 
	}
}

1080 #i‚de‡
yy°p˝y


1081 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


1082 
	#yy°p˝y
 
°p˝y


	)

1087 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

1089 *
yyd
 = 
yyde°
;

1090 c⁄° *
yys
 = 
yy§c
;

1092 (*
yyd
++ = *
yys
++) != '\0')

1095  
yyd
 - 1;

1096 
	}
}

1100 #i‚de‡
yyäamîr


1108 
YYSIZE_T


1109 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

1111 i‡(*
yy°r
 == '"')

1113 
YYSIZE_T
 
yyn
 = 0;

1114 c⁄° *
yyp
 = 
yy°r
;

1117 *++
yyp
)

1121 
do_nŸ_°rù_quŸes
;

1124 i‡(*++
yyp
 != '\\')

1125 
do_nŸ_°rù_quŸes
;

1128 i‡(
yyªs
)

1129 
yyªs
[
yyn
] = *
yyp
;

1130 
yyn
++;

1134 i‡(
yyªs
)

1135 
yyªs
[
yyn
] = '\0';

1136  
yyn
;

1138 
do_nŸ_°rù_quŸes
: ;

1141 i‡(! 
yyªs
)

1142  
	`yy°æí
 (
yy°r
);

1144  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1145 
	}
}

1157 
	$yysy¡ax_îr‹
 (
YYSIZE_T
 *
yymsg_Æloc
, **
yymsg
,

1158 
yyty≥_öt16
 *
yys•
, 
yytokí
)

1160 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yytokí
]);

1161 
YYSIZE_T
 
yysize
 = 
yysize0
;

1162 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1164 c⁄° *
yyf‹m©
 = 
YY_NULLPTR
;

1166 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1169 
yycou¡
 = 0;

1194 i‡(
yytokí
 !
YYEMPTY
)

1196 
yyn
 = 
yy∑˘
[*
yys•
];

1197 
yy¨g
[
yycou¡
++] = 
yyäame
[
yytokí
];

1198 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1203 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1205 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1206 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1207 
yyx
;

1209 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1210 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR


1211 && !
	`yyèbÀ_vÆue_is_îr‹
 (
yyèbÀ
[
yyx
 + 
yyn
]))

1213 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1215 
yycou¡
 = 1;

1216 
yysize
 = 
yysize0
;

1219 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1221 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yyx
]);

1222 i‡(! (
yysize
 <
yysize1


1223 && 
yysize1
 <
YYSTACK_ALLOC_MAXIMUM
))

1225 
yysize
 = 
yysize1
;

1231 
yycou¡
)

1233 
	#YYCASE_
(
N
, 
S
) \

1234 
N
: \

1235 
yyf‹m©
 = 
S
; \

1236 

	)

1237 
	`YYCASE_
(0, 
	`YY_
("syntaxÉrror"));

1238 
	`YYCASE_
(1, 
	`YY_
("syntaxÉrror, unexpected %s"));

1239 
	`YYCASE_
(2, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s"));

1240 
	`YYCASE_
(3, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s"));

1241 
	`YYCASE_
(4, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s"));

1242 
	`YYCASE_
(5, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s"));

1243 #unde‡
YYCASE_


1247 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf‹m©
);

1248 i‡(! (
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
))

1250 
yysize
 = 
yysize1
;

1253 i‡(*
yymsg_Æloc
 < 
yysize
)

1255 *
yymsg_Æloc
 = 2 * 
yysize
;

1256 i‡(! (
yysize
 <*
yymsg_Æloc


1257 && *
yymsg_Æloc
 <
YYSTACK_ALLOC_MAXIMUM
))

1258 *
yymsg_Æloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1266 *
yyp
 = *
yymsg
;

1267 
yyi
 = 0;

1268 (*
yyp
 = *
yyf‹m©
) != '\0')

1269 i‡(*
yyp
 ='%' && 
yyf‹m©
[1] ='s' && 
yyi
 < 
yycou¡
)

1271 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1272 
yyf‹m©
 += 2;

1276 
yyp
++;

1277 
yyf‹m©
++;

1281 
	}
}

1289 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1291 
	`YYUSE
 (
yyvÆuï
);

1292 i‡(!
yymsg
)

1293 
yymsg
 = "Deleting";

1294 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1296 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1297 
	`YYUSE
 (
yyty≥
);

1298 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1299 
	}
}

1305 
	gyych¨
;

1308 
YYSTYPE
 
	gyylvÆ
;

1310 
	gyy√ºs
;

1318 
	$yy∑r£
 ()

1320 
yy°©e
;

1322 
yyîr°©us
;

1332 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1333 
yyty≥_öt16
 *
yyss
;

1334 
yyty≥_öt16
 *
yys•
;

1337 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1338 
YYSTYPE
 *
yyvs
;

1339 
YYSTYPE
 *
yyv•
;

1341 
YYSIZE_T
 
yy°acksize
;

1343 
yyn
;

1344 
yyªsu…
;

1346 
yytokí
 = 0;

1349 
YYSTYPE
 
yyvÆ
;

1351 #i‡
YYERROR_VERBOSE


1353 
yymsgbuf
[128];

1354 *
yymsg
 = 
yymsgbuf
;

1355 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1358 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1362 
yyÀn
 = 0;

1364 
yys•
 = 
yyss
 = 
yysß
;

1365 
yyv•
 = 
yyvs
 = 
yyvß
;

1366 
yy°acksize
 = 
YYINITDEPTH
;

1368 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1370 
yy°©e
 = 0;

1371 
yyîr°©us
 = 0;

1372 
yy√ºs
 = 0;

1373 
yych¨
 = 
YYEMPTY
;

1374 
yy£t°©e
;

1379 
yy√w°©e
:

1382 
yys•
++;

1384 
yy£t°©e
:

1385 *
yys•
 = 
yy°©e
;

1387 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1390 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1392 #ifde‡
yyovîÊow


1397 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1398 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1404 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1405 &
yyss1
, 
yysize
 *  (*
yys•
),

1406 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1407 &
yy°acksize
);

1409 
yyss
 = 
yyss1
;

1410 
yyvs
 = 
yyvs1
;

1413 #i‚de‡
YYSTACK_RELOCATE


1414 
yyexhau°edœb
;

1417 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1418 
yyexhau°edœb
;

1419 
yy°acksize
 *= 2;

1420 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1421 
yy°acksize
 = 
YYMAXDEPTH
;

1424 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1425 
yyÆloc
 *
yy±r
 =

1426 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1427 i‡(! 
yy±r
)

1428 
yyexhau°edœb
;

1429 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1430 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1431 #unde‡
YYSTACK_RELOCATE


1432 i‡(
yyss1
 !
yysß
)

1433 
	`YYSTACK_FREE
 (
yyss1
);

1438 
yys•
 = 
yyss
 + 
yysize
 - 1;

1439 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1441 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1442 (Ë
yy°acksize
));

1444 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1445 
YYABORT
;

1448 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1450 i‡(
yy°©e
 =
YYFINAL
)

1451 
YYACCEPT
;

1453 
yybackup
;

1458 
yybackup
:

1464 
yyn
 = 
yy∑˘
[
yy°©e
];

1465 i‡(
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1466 
yydeÁu…
;

1471 i‡(
yych¨
 =
YYEMPTY
)

1473 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1474 
yych¨
 = 
	`yyÀx
 ();

1477 i‡(
yych¨
 <
YYEOF
)

1479 
yych¨
 = 
yytokí
 = 
YYEOF
;

1480 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1484 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1485 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1490 
yyn
 +
yytokí
;

1491 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1492 
yydeÁu…
;

1493 
yyn
 = 
yyèbÀ
[yyn];

1494 i‡(
yyn
 <= 0)

1496 i‡(
	`yyèbÀ_vÆue_is_îr‹
 (
yyn
))

1497 
yyîæab
;

1498 
yyn
 = -yyn;

1499 
yyªdu˚
;

1504 i‡(
yyîr°©us
)

1505 
yyîr°©us
--;

1508 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1511 
yych¨
 = 
YYEMPTY
;

1513 
yy°©e
 = 
yyn
;

1514 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1515 *++
yyv•
 = 
yylvÆ
;

1516 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1518 
yy√w°©e
;

1524 
yydeÁu…
:

1525 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1526 i‡(
yyn
 == 0)

1527 
yyîæab
;

1528 
yyªdu˚
;

1534 
yyªdu˚
:

1536 
yyÀn
 = 
yyr2
[
yyn
];

1546 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1549 
	`YY_REDUCE_PRINT
 (
yyn
);

1550 
yyn
)

1555 (
yyvÆ
.
node
Ë
	`Rec‹d
("PROGRAM", (
yyv•
[0].node), 
NULL
);

1564 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXTDEFS",(
yyv•
[-1].node),(yyv•[0].node),
NULL
);

1571 {(
yyvÆ
.
node
Ë
	`Rec‹d
("EXTDEFS",
NULL
);}

1578 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXTDEF",(
yyv•
[-2].node),(yyv•[-1].node),(yyv•[0].node),
NULL
);

1586 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXTDEF",(
yyv•
[-2].node),(yyv•[-1].node),(yyv•[0].node),
NULL
);

1594 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXTVARS", (
yyv•
[0].node),
NULL
);

1602 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXTVARS", (
yyv•
[-2].node),(yyv•[-1].node),(yyv•[0].node),
NULL
);

1610 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXTVARS",
NULL
);

1618 (
yyvÆ
.
node
Ë
	`Rec‹d
("SPEC", (
yyv•
[0].node), 
NULL
);

1626 (
yyvÆ
.
node
Ë
	`Rec‹d
("SPEC", (
yyv•
[0].node), 
NULL
);

1634 (
yyvÆ
.
node
Ë
	`Rec‹d
("STSPEC", (
yyv•
[-4].node),(yyv•[-3].node),(yyv•[-2].node),(yyv•[-1].node),(yyv•[0].node),
NULL
);

1642 (
yyvÆ
.
node
Ë
	`Rec‹d
("STSPEC", (
yyv•
[-1].node),(yyv•[0].node),
NULL
);

1650 (
yyvÆ
.
node
Ë
	`Rec‹d
("OPTTAG", (
yyv•
[0].node),
NULL
);

1658 (
yyvÆ
.
node
Ë
	`Rec‹d
("OPTTAG", 
NULL
);

1666 (
yyvÆ
.
node
Ë
	`Rec‹d
("VAR",(
yyv•
[0].node), 
NULL
);

1674 (
yyvÆ
.
node
Ë
	`Rec‹d
("VAR",(
yyv•
[-3].node), (yyv•[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1682 (
yyvÆ
.
node
Ë
	`Rec‹d
("FUNC",(
yyv•
[-3].node),(yyv•[-2].node),(yyv•[-1].node),(yyv•[0].node), 
NULL
);

1690 (
yyvÆ
.
node
Ë
	`Rec‹d
("PARAS", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1698 (
yyvÆ
.
node
Ë
	`Rec‹d
("PARAS", (
yyv•
[0].node), 
NULL
);

1706 (
yyvÆ
.
node
Ë
	`Rec‹d
("PARAS", 
NULL
);

1714 (
yyvÆ
.
node
Ë
	`Rec‹d
("PARA", (
yyv•
[-1].node), (yyv•[0].node), 
NULL
);

1722 (
yyvÆ
.
node
Ë
	`Rec‹d
("STMTBLOCK",(
yyv•
[-3].node), (yyv•[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1730 (
yyvÆ
.
node
Ë
	`Rec‹d
("STMTS", (
yyv•
[-1].node), (yyv•[0].node), 
NULL
);

1738 (
yyvÆ
.
node
Ë
	`Rec‹d
("STMTS", 
NULL
);

1746 (
yyvÆ
.
node
Ë
	`Rec‹d
("STMT", (
yyv•
[-1].node), (yyv•[0].node), 
NULL
);

1754 (
yyvÆ
.
node
Ë
	`Rec‹d
("STMT",(
yyv•
[0].node), 
NULL
);

1762 (
yyvÆ
.
node
Ë
	`Rec‹d
("STMT", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1770 (
yyvÆ
.
node
Ë
	`Rec‹d
("STMT", (
yyv•
[-5].node),(yyv•[-4].node),(yyv•[-3].node),(yyv•[-2].node),(yyv•[-1].node),(yyv•[0].node),
NULL
);

1778 (
yyvÆ
.
node
Ë
	`Rec‹d
("STMT", (
yyv•
[-8].node),(yyv•[-7].node),(yyv•[-6].node),(yyv•[-5].node),(yyv•[-4].node),(yyv•[-3].node),(yyv•[-2].node),(yyv•[-1].node),(yyv•[0].node),
NULL
);

1786 (
yyvÆ
.
node
Ë
	`Rec‹d
("STMT", (
yyv•
[-1].node),(yyv•[0].node),
NULL
);

1794 (
yyvÆ
.
node
Ë
	`Rec‹d
("STMT",(
yyv•
[-1].node),(yyv•[0].node),
NULL
);

1802 (
yyvÆ
.
node
Ë
	`Rec‹d
("ESTMT", (
yyv•
[-1].node), (yyv•[0].node),
NULL
);

1810 (
yyvÆ
.
node
Ë
	`Rec‹d
("ESTMT", 
NULL
);

1818 (
yyvÆ
.
node
Ë
	`Rec‹d
("DEFS",(
yyv•
[-1].node),(yyv•[0].node),
NULL
);

1826 (
yyvÆ
.
node
Ë
	`Rec‹d
("DEFS", 
NULL
);

1834 (
yyvÆ
.
node
Ë
	`Rec‹d
("DEF", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node),
NULL
);

1842 (
yyvÆ
.
node
Ë
	`Rec‹d
("DECS", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1850 (
yyvÆ
.
node
Ë
	`Rec‹d
("DECS", (
yyv•
[0].node), 
NULL
);

1858 (
yyvÆ
.
node
Ë
	`Rec‹d
("DEC",(
yyv•
[0].node), 
NULL
);

1866 (
yyvÆ
.
node
Ë
	`Rec‹d
("DEC", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node),
NULL
);

1874 (
yyvÆ
.
node
Ë
	`Rec‹d
("INIT", (
yyv•
[0].node), 
NULL
);

1882 (
yyvÆ
.
node
Ë
	`Rec‹d
("INIT", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1890 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[0].node), 
NULL
);

1898 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1906 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1914 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1922 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1930 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1938 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1946 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1954 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1962 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1970 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1978 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1986 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

1994 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2002 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2010 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2018 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2026 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2034 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2042 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2050 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2058 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2066 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2074 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2082 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2090 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2098 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2106 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2114 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2122 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2130 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-1].node), (yyv•[0].node), 
NULL
);

2138 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-1].node), (yyv•[0].node), 
NULL
);

2146 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-1].node), (yyv•[0].node), 
NULL
);

2154 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-1].node), (yyv•[0].node), 
NULL
);

2162 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-1].node), (yyv•[0].node), 
NULL
);

2170 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2178 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-3].node), (yyv•[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2186 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[-1].node), (yyv•[0].node), 
NULL
);

2194 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", (
yyv•
[0].node), 
NULL
);

2202 (
yyvÆ
.
node
Ë
	`Rec‹d
("EXP", 
NULL
);

2210 (
yyvÆ
.
node
Ë
	`Rec‹d
("ARRS", (
yyv•
[-3].node), (yyv•[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2218 (
yyvÆ
.
node
Ë
	`Rec‹d
("ARRS", 
NULL
);

2226 (
yyvÆ
.
node
Ë
	`Rec‹d
("ARGS", (
yyv•
[-2].node), (yyv•[-1].node), (yyv•[0].node), 
NULL
);

2234 (
yyvÆ
.
node
Ë
	`Rec‹d
("ARGS", (
yyv•
[0].node), 
NULL
);

2254 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

2256 
	`YYPOPSTACK
 (
yyÀn
);

2257 
yyÀn
 = 0;

2258 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2260 *++
yyv•
 = 
yyvÆ
;

2266 
yyn
 = 
yyr1
[yyn];

2268 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

2269 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

2270 
yy°©e
 = 
yyèbÀ
[yystate];

2272 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

2274 
yy√w°©e
;

2280 
yyîæab
:

2283 
yytokí
 = 
yych¨
 =
YYEMPTY
 ? YYEMPTY : 
	`YYTRANSLATE
 (yychar);

2286 i‡(!
yyîr°©us
)

2288 ++
yy√ºs
;

2289 #i‡! 
YYERROR_VERBOSE


2290 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

2292 
	#YYSYNTAX_ERROR
 
	`yysy¡ax_îr‹
 (&
yymsg_Æloc
, &
yymsg
, \

2293 
yys•
, 
yytokí
)

	)

2295 c⁄° *
yymsgp
 = 
	`YY_
("syntaxÉrror");

2296 
yysy¡ax_îr‹_°©us
;

2297 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

2298 i‡(
yysy¡ax_îr‹_°©us
 == 0)

2299 
yymsgp
 = 
yymsg
;

2300 i‡(
yysy¡ax_îr‹_°©us
 == 1)

2302 i‡(
yymsg
 !
yymsgbuf
)

2303 
	`YYSTACK_FREE
 (
yymsg
);

2304 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yymsg_Æloc
);

2305 i‡(!
yymsg
)

2307 
yymsg
 = 
yymsgbuf
;

2308 
yymsg_Æloc
 =  
yymsgbuf
;

2309 
yysy¡ax_îr‹_°©us
 = 2;

2313 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

2314 
yymsgp
 = 
yymsg
;

2317 
	`yyîr‹
 (
yymsgp
);

2318 i‡(
yysy¡ax_îr‹_°©us
 == 2)

2319 
yyexhau°edœb
;

2321 #unde‡
YYSYNTAX_ERROR


2327 i‡(
yyîr°©us
 == 3)

2332 i‡(
yych¨
 <
YYEOF
)

2335 i‡(
yych¨
 =
YYEOF
)

2336 
YYABORT
;

2340 
	`yyde°ru˘
 ("Error: discarding",

2341 
yytokí
, &
yylvÆ
);

2342 
yych¨
 = 
YYEMPTY
;

2348 
yyîæab1
;

2354 
yyîr‹œb
:

2360 
yyîr‹œb
;

2364 
	`YYPOPSTACK
 (
yyÀn
);

2365 
yyÀn
 = 0;

2366 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2367 
yy°©e
 = *
yys•
;

2368 
yyîæab1
;

2374 
yyîæab1
:

2375 
yyîr°©us
 = 3;

2379 
yyn
 = 
yy∑˘
[
yy°©e
];

2380 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

2382 
yyn
 +
YYTERROR
;

2383 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

2385 
yyn
 = 
yyèbÀ
[yyn];

2386 i‡(0 < 
yyn
)

2392 i‡(
yys•
 =
yyss
)

2393 
YYABORT
;

2396 
	`yyde°ru˘
 ("Error:Öopping",

2397 
yy°os
[
yy°©e
], 
yyv•
);

2398 
	`YYPOPSTACK
 (1);

2399 
yy°©e
 = *
yys•
;

2400 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2403 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


2404 *++
yyv•
 = 
yylvÆ
;

2405 
YY_IGNORE_MAYBE_UNINITIALIZED_END


2409 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

2411 
yy°©e
 = 
yyn
;

2412 
yy√w°©e
;

2418 
yyac˚±œb
:

2419 
yyªsu…
 = 0;

2420 
yyªtu∫
;

2425 
yyab‹éab
:

2426 
yyªsu…
 = 1;

2427 
yyªtu∫
;

2429 #i‡!
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


2433 
yyexhau°edœb
:

2434 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

2435 
yyªsu…
 = 2;

2439 
yyªtu∫
:

2440 i‡(
yych¨
 !
YYEMPTY
)

2444 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

2445 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

2446 
yytokí
, &
yylvÆ
);

2450 
	`YYPOPSTACK
 (
yyÀn
);

2451 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2452 
yys•
 !
yyss
)

2454 
	`yyde°ru˘
 ("Cleanup:Öopping",

2455 
yy°os
[*
yys•
], 
yyv•
);

2456 
	`YYPOPSTACK
 (1);

2458 #i‚de‡
yyovîÊow


2459 i‡(
yyss
 !
yysß
)

2460 
	`YYSTACK_FREE
 (
yyss
);

2462 #i‡
YYERROR_VERBOSE


2463 i‡(
yymsg
 !
yymsgbuf
)

2464 
	`YYSTACK_FREE
 (
yymsg
);

2466  
yyªsu…
;

2467 
	}
}

2471 
Node
* 
	$Rec‹d
(* 
c⁄ã¡
, ...){

2472 
Node
* 
ªs
 = (Node*)
	`mÆloc
((Node));

2473 
ªs
->
tokí
 = 
	`°rdup
(
c⁄ã¡
);

2474 
ªs
->
c⁄ã¡
 = 
NULL
;

2475 
ªs
->
©å
.
isLe·
 = 0;

2476 
va_li°
 
≠
;

2477 
	`va_°¨t
(
≠
, 
c⁄ã¡
);

2479 
Node
* 
tmp
;

2480 
tmp
 = 
	`va_¨g
(
≠
, 
Node
*);

2482 
ªs
->
chûd
 = 
tmp
;

2483 
ªs
->
√xt
 = 
NULL
;

2485 
Node
* 
âmp
;

2486 
tmp
 !
NULL
){

2487 
âmp
 = 
	`va_¨g
(
≠
, 
Node
*);

2488 
tmp
->
√xt
 = 
âmp
;

2489 
tmp
 = 
âmp
;

2491 
	`va_íd
(
≠
);

2493 
hód
 = 
ªs
;

2494  
ªs
;

2495 
	}
}

2497 
	$wÆkThrough
(
Node
* 
n
, 
œyî
){

2498 i‡(
n
->
tokí
 !
NULL
){

2499 
i
 = 0;ò< 
œyî
 * 2; i++)

2500 
	`¥ötf
(" ");

2501 * 
c
 = 
n
->
tokí
;

2503 
	`¥ötf
("%s", 
n
->
tokí
);

2505 i‡(
n
->
c⁄ã¡
 !
NULL
){

2506 
	`¥ötf
(" ");

2507 
	`¥ötf
("%s", 
n
->
c⁄ã¡
);

2509 
	`¥ötf
("\n");

2511 i‡(
n
->
chûd
 !
NULL
){

2512 
	`wÆkThrough
(
n
->
chûd
, 
œyî
+1);

2515 i‡(
n
->
√xt
 !
NULL
Ë
	`wÆkThrough
“->√xt, 
œyî
);

2518 
	}
}

2520 
	$yyîr‹
(*
msg
){

2523 
	}
}

2525 
Node
* 
	$∑r£
(* 
fûíame
){

2526 
yydebug
 = 0;

2527 
	`‰e›í
(
fûíame
,"r",
°dö
);

2529 
	`yy∑r£
();

2535  
hód
;

2536 
	}
}

	@y.tab.h

33 #i‚de‡
YY_YY_Y_TAB_H_INCLUDED


34 
	#YY_YY_Y_TAB_H_INCLUDED


	)

36 #i‚de‡
YYDEBUG


37 
	#YYDEBUG
 0

	)

39 #i‡
YYDEBUG


40 
yydebug
;

44 #i‚de‡
YYTOKENTYPE


45 
	#YYTOKENTYPE


	)

46 
	eyytokíty≥


48 
	mASSIGNOP
 = 258,

49 
	mTYPE
 = 259,

50 
	mLC
 = 260,

51 
	mRC
 = 261,

52 
	mSTRUCT
 = 262,

53 
	mRETURN
 = 263,

54 
	mIF
 = 264,

55 
	mELSE
 = 265,

56 
	mBREAK
 = 266,

57 
	mCONT
 = 267,

58 
	mFOR
 = 268,

59 
	mINT
 = 269,

60 
	mID
 = 270,

61 
	mSEMI
 = 271,

62 
	mCOMMA
 = 272,

63 
	mLP
 = 273,

64 
	mRP
 = 274,

65 
	mLB
 = 275,

66 
	mRB
 = 276,

67 
	mDOT
 = 277,

68 
	mLOGNOT
 = 278,

69 
	mINCR
 = 279,

70 
	mDECR
 = 280,

71 
	mBITNOT
 = 281,

72 
	mMOD
 = 282,

73 
	mTIMES
 = 283,

74 
	mDIV
 = 284,

75 
	mPLUS
 = 285,

76 
	mMINUS
 = 286,

77 
	mSHLEFT
 = 287,

78 
	mSHRIGHT
 = 288,

79 
	mGT
 = 289,

80 
	mGEQ
 = 290,

81 
	mLT
 = 291,

82 
	mLEQ
 = 292,

83 
	mEQU
 = 293,

84 
	mNOTEQ
 = 294,

85 
	mBITAND
 = 295,

86 
	mBITXOR
 = 296,

87 
	mBITOR
 = 297,

88 
	mLOGAND
 = 298,

89 
	mLOGOR
 = 299,

90 
	mPLUSAN
 = 300,

91 
	mMINUSAN
 = 301,

92 
	mTIMESAN
 = 302,

93 
	mDIVAN
 = 303,

94 
	mBANDAN
 = 304,

95 
	mBXORAN
 = 305,

96 
	mBORAN
 = 306,

97 
	mSHLEFTAN
 = 307,

98 
	mSHRIGHTAN
 = 308

102 
	#ASSIGNOP
 258

	)

103 
	#TYPE
 259

	)

104 
	#LC
 260

	)

105 
	#RC
 261

	)

106 
	#STRUCT
 262

	)

107 
	#RETURN
 263

	)

108 
	#IF
 264

	)

109 
	#ELSE
 265

	)

110 
	#BREAK
 266

	)

111 
	#CONT
 267

	)

112 
	#FOR
 268

	)

113 
	#INT
 269

	)

114 
	#ID
 270

	)

115 
	#SEMI
 271

	)

116 
	#COMMA
 272

	)

117 
	#LP
 273

	)

118 
	#RP
 274

	)

119 
	#LB
 275

	)

120 
	#RB
 276

	)

121 
	#DOT
 277

	)

122 
	#LOGNOT
 278

	)

123 
	#INCR
 279

	)

124 
	#DECR
 280

	)

125 
	#BITNOT
 281

	)

126 
	#MOD
 282

	)

127 
	#TIMES
 283

	)

128 
	#DIV
 284

	)

129 
	#PLUS
 285

	)

130 
	#MINUS
 286

	)

131 
	#SHLEFT
 287

	)

132 
	#SHRIGHT
 288

	)

133 
	#GT
 289

	)

134 
	#GEQ
 290

	)

135 
	#LT
 291

	)

136 
	#LEQ
 292

	)

137 
	#EQU
 293

	)

138 
	#NOTEQ
 294

	)

139 
	#BITAND
 295

	)

140 
	#BITXOR
 296

	)

141 
	#BITOR
 297

	)

142 
	#LOGAND
 298

	)

143 
	#LOGOR
 299

	)

144 
	#PLUSAN
 300

	)

145 
	#MINUSAN
 301

	)

146 
	#TIMESAN
 302

	)

147 
	#DIVAN
 303

	)

148 
	#BANDAN
 304

	)

149 
	#BXORAN
 305

	)

150 
	#BORAN
 306

	)

151 
	#SHLEFTAN
 307

	)

152 
	#SHRIGHTAN
 308

	)

155 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


156 
YYSTYPE
 
	tYYSTYPE
;

157 
	uYYSTYPE


161 
Node
 *
	mnode
;

165 
	#YYSTYPE_IS_TRIVIAL
 1

	)

166 
	#YYSTYPE_IS_DECLARED
 1

	)

170 
YYSTYPE
 
yylvÆ
;

172 
yy∑r£
 ();

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/libintl.h

20 #i‚de‡
_LIBINTL_H


21 
	#_LIBINTL_H
 1

	)

23 
	~<„©uªs.h
>

27 
	#__USE_GNU_GETTEXT
 1

	)

31 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

32 ((
maj‹
Ë=0 ? 1 : -1)

	)

34 
__BEGIN_DECLS


39 *
	$gëãxt
 (c⁄° *
__msgid
)

40 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

44 *
	$dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

45 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

46 *
	$__dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

47 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

51 *
	$dcgëãxt
 (c⁄° *
__domaö«me
,

52 c⁄° *
__msgid
, 
__ˇãg‹y
)

53 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

54 *
	$__dcgëãxt
 (c⁄° *
__domaö«me
,

55 c⁄° *
__msgid
, 
__ˇãg‹y
)

56 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

61 *
	$ngëãxt
 (c⁄° *
__msgid1
, c⁄° *
__msgid2
,

62 
__n
)

63 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

67 *
	$dngëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

68 c⁄° *
__msgid2
, 
__n
)

69 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

73 *
	$d˙gëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

74 c⁄° *
__msgid2
, 
__n
,

75 
__ˇãg‹y
)

76 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

82 *
	$ãxtdomaö
 (c⁄° *
__domaö«me
Ë
__THROW
;

86 *
	$bödãxtdomaö
 (c⁄° *
__domaö«me
,

87 c⁄° *
__dú«me
Ë
__THROW
;

91 *
	$böd_ãxtdomaö_code£t
 (c⁄° *
__domaö«me
,

92 c⁄° *
__code£t
Ë
__THROW
;

96 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


99 
	#__√ed_NULL


	)

100 
	~<°ddef.h
>

103 
	~<loˇÀ.h
>

109 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

111 
	#dgëãxt
(
domaö«me
, 
msgid
) \

112 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

114 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

116 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

117 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

121 
__END_DECLS


	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

50 
__BEGIN_NAMESPACE_STD


53 
	slc⁄v


57 *
	mdecimÆ_poöt
;

58 *
	mthoußnds_£p
;

64 *
	mgroupög
;

70 *
	möt_cuº_symbﬁ
;

71 *
	mcuºícy_symbﬁ
;

72 *
	mm⁄_decimÆ_poöt
;

73 *
	mm⁄_thoußnds_£p
;

74 *
	mm⁄_groupög
;

75 *
	mposôive_sign
;

76 *
	m√g©ive_sign
;

77 
	möt_‰ac_digôs
;

78 
	m‰ac_digôs
;

80 
	mp_cs_¥e˚des
;

82 
	mp_£p_by_•a˚
;

84 
	mn_cs_¥e˚des
;

86 
	mn_£p_by_•a˚
;

93 
	mp_sign_po¢
;

94 
	mn_sign_po¢
;

95 #ifde‡
__USE_ISOC99


97 
	möt_p_cs_¥e˚des
;

99 
	möt_p_£p_by_•a˚
;

101 
	möt_n_cs_¥e˚des
;

103 
	möt_n_£p_by_•a˚
;

110 
	möt_p_sign_po¢
;

111 
	möt_n_sign_po¢
;

113 
	m__öt_p_cs_¥e˚des
;

114 
	m__öt_p_£p_by_•a˚
;

115 
	m__öt_n_cs_¥e˚des
;

116 
	m__öt_n_£p_by_•a˚
;

117 
	m__öt_p_sign_po¢
;

118 
	m__öt_n_sign_po¢
;

124 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

127 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

129 
__END_NAMESPACE_STD


132 #ifdef 
__USE_XOPEN2K8


145 
	~<xloˇÀ.h
>

151 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

152 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

158 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

159 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

160 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

161 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

162 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

163 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

164 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

165 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

166 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

167 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

168 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

169 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

170 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

171 | 
LC_NUMERIC_MASK
 \

172 | 
LC_TIME_MASK
 \

173 | 
LC_COLLATE_MASK
 \

174 | 
LC_MONETARY_MASK
 \

175 | 
LC_MESSAGES_MASK
 \

176 | 
LC_PAPER_MASK
 \

177 | 
LC_NAME_MASK
 \

178 | 
LC_ADDRESS_MASK
 \

179 | 
LC_TELEPHONE_MASK
 \

180 | 
LC_MEASUREMENT_MASK
 \

181 | 
LC_IDENTIFICATION_MASK
 \

182 )

	)

186 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

190 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

197 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

201 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

205 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
41
779
anotherl.l
ast.h
datastruct.h
lex.yy.c
main.cpp
smallc.l
smallc.tab.h
smallc.y
src/main.cpp
testcases/[done]bug.c
testcases/[done]fact.c
testcases/[done]gs.c
testcases/[done]leaf.c
testcases/[done]sort.c
testcases/[done]sum.c
testcases/[done]sum2.c
testcases/[done]tak.c
y.tab.c
y.tab.h
/usr/include/alloca.h
/usr/include/errno.h
/usr/include/inttypes.h
/usr/include/libintl.h
/usr/include/malloc.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/unistd.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/locale.h
/usr/include/stdint.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/stdc-predef.h
/usr/include/endian.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
